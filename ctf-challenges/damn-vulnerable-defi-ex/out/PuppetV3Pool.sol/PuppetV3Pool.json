{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20Minimal",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Minimal",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "_uniswapV3Pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "Borrowed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEPOSIT_FACTOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TWAP_PERIOD",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculateDepositOfWETHRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Minimal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV3Pool",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IERC20Minimal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b50604051610e4c380380610e4c8339818101604052606081101561003357600080fd5b50805160208201516040909201516001600160601b0319606092831b811660805292821b831660a052901b1660c05260805160601c60a05160601c60c05160601c610d9c6100b0600039806102de52806103545250806102785280610302528061038552508061016052806101e852806103a65250610d9c6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c5ebeaec1161005b578063c5ebeaec14610109578063f55ebd2a14610128578063fc0c546a14610130578063fc7e286d1461013857610088565b80633fc8cef31461008d5780635d48e255146100b15780637ca25184146100cb578063c4bd83fa146100ec575b600080fd5b61009561015e565b604080516001600160a01b039092168252519081900360200190f35b6100b9610182565b60408051918252519081900360200190f35b6100d3610187565b6040805163ffffffff9092168252519081900360200190f35b6100b96004803603602081101561010257600080fd5b503561018d565b6101266004803603602081101561011f57600080fd5b50356101ad565b005b6100956102dc565b610095610300565b6100b96004803603602081101561014e57600080fd5b50356001600160a01b0316610324565b7f000000000000000000000000000000000000000000000000000000000000000081565b600381565b61025881565b6000806101a161019c84610336565b61034c565b6003029150505b919050565b60006101b88261018d565b604080516323b872dd60e01b81523360048201523060248201526044810183905290519192506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916064808201926020929091908290030181600087803b15801561023157600080fd5b505af1158015610245573d6000803e3d6000fd5b505050506040513d602081101561025b57600080fd5b505033600081815260208190526040902080548301905561029e907f000000000000000000000000000000000000000000000000000000000000000090846103d1565b6040805182815260208101849052815133927feae9cfbc77fdd40ca899f36b608256063b2bc9d8178b0220f7ad513e178d6730928290030190a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b806001600160801b03811681146101a857600080fd5b60008061037b7f000000000000000000000000000000000000000000000000000000000000000061025861051f565b5090506103ca81847f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061088e565b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b6020831061044d5780518252601f19909201916020918201910161042e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146104af576040519150601f19603f3d011682016040523d82523d6000602084013e6104b4565b606091505b50915091508180156104e25750805115806104e257508080602001905160208110156104df57600080fd5b50515b610518576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b60008063ffffffff831661055f576040805162461bcd60e51b8152602060048201526002602482015261042560f41b604482015290519081900360640190fd5b604080516002808252606082018352600092602083019080368337019050509050838160008151811061058e57fe5b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106105b757fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b81526004810182815283516024830152835160009384936001600160a01b038b169363883bdbfd9388939192839260449091019185820191028083838b5b8381101561062c578181015183820152602001610614565b505050509050019250505060006040518083038186803b15801561064f57600080fd5b505afa158015610663573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561068c57600080fd5b81019080805160405193929190846401000000008211156106ac57600080fd5b9083019060208201858111156106c157600080fd5b82518660208202830111640100000000821117156106de57600080fd5b82525081516020918201928201910280838360005b8381101561070b5781810151838201526020016106f3565b505050509050016040526020018051604051939291908464010000000082111561073457600080fd5b90830190602082018581111561074957600080fd5b825186602082028301116401000000008211171561076657600080fd5b82525081516020918201928201910280838360005b8381101561079357818101518382015260200161077b565b50505050905001604052505050915091506000826000815181106107b357fe5b6020026020010151836001815181106107c857fe5b60200260200101510390506000826000815181106107e257fe5b6020026020010151836001815181106107f757fe5b60200260200101510390508763ffffffff168260060b8161081457fe5b05965060008260060b12801561083e57508763ffffffff168260060b8161083757fe5b0760060b15155b1561084b57600019909601955b63ffffffff88166001600160a01b0302640100000000600160c01b03602083901b166001600160c01b0382168161087e57fe5b0496505050505050509250929050565b60008061089a86610985565b90506001600160801b036001600160a01b03821611610909576001600160a01b03808216800290848116908616106108e9576108e4600160c01b876001600160801b031683610cb7565b610901565b61090181876001600160801b0316600160c01b610cb7565b92505061097c565b60006109286001600160a01b0383168068010000000000000000610cb7565b9050836001600160a01b0316856001600160a01b0316106109605761095b600160801b876001600160801b031683610cb7565b610978565b61097881876001600160801b0316600160801b610cb7565b9250505b50949350505050565b60008060008360020b1261099c578260020b6109a4565b8260020b6000035b9050620d89e88111156109e2576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b6000600182166109f657600160801b610a08565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610a3c576ffff97272373d413259a46990580e213a0260801c5b6004821615610a5b576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610a7a576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610a99576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610ab8576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610ad7576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610af6576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610b16576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610b36576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610b56576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610b76576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610b96576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610bb6576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610bd6576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610bf6576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610c17576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610c37576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610c56576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610c73576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610c8e578060001981610c8a57fe5b0490505b640100000000810615610ca2576001610ca5565b60005b60ff16602082901c0192505050919050565b6000808060001985870986860292508281109083900303905080610ced5760008411610ce257600080fd5b5082900490506103ca565b808411610cf957600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a0290910302918190038190046001018684119095039490940291909403929092049190911791909102915050939250505056fea2646970667358221220d21e308db9eb229a2d414b42080c75559e9756fb5b380d6fe99dec3f6d3008a364736f6c63430007060033",
    "sourceMap": "489:2215:0:-:0;;;896:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;896:179:0;;;;;;;;;;;-1:-1:-1;;;;;;896:179:0;992:12;;;;;;;1014:14;;;;;;;1038:30;;;;;489:2215;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063c5ebeaec1161005b578063c5ebeaec14610109578063f55ebd2a14610128578063fc0c546a14610130578063fc7e286d1461013857610088565b80633fc8cef31461008d5780635d48e255146100b15780637ca25184146100cb578063c4bd83fa146100ec575b600080fd5b61009561015e565b604080516001600160a01b039092168252519081900360200190f35b6100b9610182565b60408051918252519081900360200190f35b6100d3610187565b6040805163ffffffff9092168252519081900360200190f35b6100b96004803603602081101561010257600080fd5b503561018d565b6101266004803603602081101561011f57600080fd5b50356101ad565b005b6100956102dc565b610095610300565b6100b96004803603602081101561014e57600080fd5b50356001600160a01b0316610324565b7f000000000000000000000000000000000000000000000000000000000000000081565b600381565b61025881565b6000806101a161019c84610336565b61034c565b6003029150505b919050565b60006101b88261018d565b604080516323b872dd60e01b81523360048201523060248201526044810183905290519192506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916064808201926020929091908290030181600087803b15801561023157600080fd5b505af1158015610245573d6000803e3d6000fd5b505050506040513d602081101561025b57600080fd5b505033600081815260208190526040902080548301905561029e907f000000000000000000000000000000000000000000000000000000000000000090846103d1565b6040805182815260208101849052815133927feae9cfbc77fdd40ca899f36b608256063b2bc9d8178b0220f7ad513e178d6730928290030190a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b806001600160801b03811681146101a857600080fd5b60008061037b7f000000000000000000000000000000000000000000000000000000000000000061025861051f565b5090506103ca81847f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061088e565b9392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b6020831061044d5780518252601f19909201916020918201910161042e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146104af576040519150601f19603f3d011682016040523d82523d6000602084013e6104b4565b606091505b50915091508180156104e25750805115806104e257508080602001905160208110156104df57600080fd5b50515b610518576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b60008063ffffffff831661055f576040805162461bcd60e51b8152602060048201526002602482015261042560f41b604482015290519081900360640190fd5b604080516002808252606082018352600092602083019080368337019050509050838160008151811061058e57fe5b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106105b757fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b81526004810182815283516024830152835160009384936001600160a01b038b169363883bdbfd9388939192839260449091019185820191028083838b5b8381101561062c578181015183820152602001610614565b505050509050019250505060006040518083038186803b15801561064f57600080fd5b505afa158015610663573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561068c57600080fd5b81019080805160405193929190846401000000008211156106ac57600080fd5b9083019060208201858111156106c157600080fd5b82518660208202830111640100000000821117156106de57600080fd5b82525081516020918201928201910280838360005b8381101561070b5781810151838201526020016106f3565b505050509050016040526020018051604051939291908464010000000082111561073457600080fd5b90830190602082018581111561074957600080fd5b825186602082028301116401000000008211171561076657600080fd5b82525081516020918201928201910280838360005b8381101561079357818101518382015260200161077b565b50505050905001604052505050915091506000826000815181106107b357fe5b6020026020010151836001815181106107c857fe5b60200260200101510390506000826000815181106107e257fe5b6020026020010151836001815181106107f757fe5b60200260200101510390508763ffffffff168260060b8161081457fe5b05965060008260060b12801561083e57508763ffffffff168260060b8161083757fe5b0760060b15155b1561084b57600019909601955b63ffffffff88166001600160a01b0302640100000000600160c01b03602083901b166001600160c01b0382168161087e57fe5b0496505050505050509250929050565b60008061089a86610985565b90506001600160801b036001600160a01b03821611610909576001600160a01b03808216800290848116908616106108e9576108e4600160c01b876001600160801b031683610cb7565b610901565b61090181876001600160801b0316600160c01b610cb7565b92505061097c565b60006109286001600160a01b0383168068010000000000000000610cb7565b9050836001600160a01b0316856001600160a01b0316106109605761095b600160801b876001600160801b031683610cb7565b610978565b61097881876001600160801b0316600160801b610cb7565b9250505b50949350505050565b60008060008360020b1261099c578260020b6109a4565b8260020b6000035b9050620d89e88111156109e2576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b6000600182166109f657600160801b610a08565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610a3c576ffff97272373d413259a46990580e213a0260801c5b6004821615610a5b576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610a7a576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610a99576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610ab8576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610ad7576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610af6576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610b16576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610b36576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610b56576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610b76576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610b96576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610bb6576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610bd6576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610bf6576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610c17576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610c37576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610c56576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610c73576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610c8e578060001981610c8a57fe5b0490505b640100000000810615610ca2576001610ca5565b60005b60ff16602082901c0192505050919050565b6000808060001985870986860292508281109083900303905080610ced5760008411610ce257600080fd5b5082900490506103ca565b808411610cf957600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a0290910302918190038190046001018684119095039490940291909403929092049190911791909102915050939250505056fea2646970667358221220d21e308db9eb229a2d414b42080c75559e9756fb5b380d6fe99dec3f6d3008a364736f6c63430007060033",
    "sourceMap": "489:2215:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;619:35;;;:::i;:::-;;;;-1:-1:-1;;;;;619:35:0;;;;;;;;;;;;;;517:42;;;:::i;:::-;;;;;;;;;;;;;;;;565:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1991:193;;;;;;;;;;;;;;;;-1:-1:-1;1991:193:0;;:::i;1445:540::-;;;;;;;;;;;;;;;;-1:-1:-1;1445:540:0;;:::i;:::-;;702:45;;;:::i;660:36::-;;;:::i;754:43::-;;;;;;;;;;;;;;;;-1:-1:-1;754:43:0;-1:-1:-1;;;;;754:43:0;;:::i;619:35::-;;;:::o;517:42::-;558:1;517:42;:::o;565:47::-;602:10;565:47;:::o;1991:193::-;2068:7;2087:13;2103:35;2119:18;2130:6;2119:10;:18::i;:::-;2103:15;:35::i;:::-;558:1;2155:22;;-1:-1:-1;;1991:193:0;;;;:::o;1445:540::-;1559:29;1591:44;1622:12;1591:30;:44::i;:::-;1671:67;;;-1:-1:-1;;;1671:67:0;;1689:10;1671:67;;;;1709:4;1671:67;;;;;;;;;;;;1559:76;;-1:-1:-1;;;;;;1671:4:0;:17;;;;:67;;;;;;;;;;;;;;;-1:-1:-1;1671:17:0;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1789:10:0;1780:8;:20;;;1671:67;1780:20;;;;;;:45;;;;;;1836:69;;1872:5;;1892:12;1836:27;:69::i;:::-;1921:57;;;;;;;;;;;;;;1930:10;;1921:57;;;;;;;;1445:540;;:::o;702:45::-;;;:::o;660:36::-;;;:::o;754:43::-;;;;;;;;;;;;;;:::o;2576:126::-;2686:6;-1:-1:-1;;;;;2663:31:0;;;;2655:40;;;;;2190:380;2253:7;2273:24;2302:58;2332:13;602:10;2302:21;:58::i;:::-;2272:88;;;2377:186;2419:18;2451:6;2493:5;2534:4;2377:28;:186::i;:::-;2370:193;2190:380;-1:-1:-1;;;2190:380:0:o;602:328:11:-;774:66;;;-1:-1:-1;;;;;774:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;774:66:11;-1:-1:-1;;;774:66:11;;;763:78;;;;716:12;;;;763:10;;;;774:66;763:78;;;774:66;763:78;;774:66;763:78;;;;;;;;;;-1:-1:-1;;763:78:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:126;;;;859:7;:57;;;;-1:-1:-1;871:11:11;;:16;;:44;;;902:4;891:24;;;;;;;;;;;;;;;-1:-1:-1;891:24:11;871:44;851:72;;;;;-1:-1:-1;;;851:72:11;;;;;;;;;;;;-1:-1:-1;;;851:72:11;;;;;;;;;;;;;;;602:328;;;;;:::o;885:1227:12:-;982:24;;1061:15;;;1053:30;;;;;-1:-1:-1;;;1053:30:12;;;;;;;;;;;;-1:-1:-1;;;1053:30:12;;;;;;;;;;;;;;;1124:15;;;1137:1;1124:15;;;;;;;;1094:27;;1124:15;;;;;;;;;;-1:-1:-1;1124:15:12;1094:45;;1166:10;1149:11;1161:1;1149:14;;;;;;;;;;;;;:27;;;;;;;;;;;1203:1;1186:11;1198:1;1186:14;;;;;;;;:18;;;;:14;;;;;;;;;;:18;1315:41;;-1:-1:-1;;;1315:41:12;;;;;;;;;;;;;;;;1216:30;;;;-1:-1:-1;;;;;1315:28:12;;;;;1344:11;;1315:41;;;;;;;;;;;;;;;;;1216:30;1315:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1315:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1315:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1315:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:141;;;;1367:26;1417:15;1433:1;1417:18;;;;;;;;;;;;;;1396:15;1412:1;1396:18;;;;;;;;;;;;;;:39;1367:68;;1445:43;1543:34;1578:1;1543:37;;;;;;;;;;;;;;1503:34;1538:1;1503:37;;;;;;;;;;;;;;:77;1445:135;;1641:10;1618:33;;:20;:33;;;;;;;;1591:61;;1734:1;1711:20;:24;;;:68;;;;;1763:10;1740:33;;:20;:33;;;;;;;;:38;;;;1711:68;1707:94;;;-1:-1:-1;;1781:20:12;;;;1707:94;1954:19;;;-1:-1:-1;;;;;1954:39:12;-1:-1:-1;;;;;2101:2:12;2053:50;;;;-1:-1:-1;;;;;2035:69:12;;2053:50;2035:69;;;;;2003:102;;885:1227;;;;;;;;;;;:::o;2616:955::-;2772:19;2803:20;2826:33;2854:4;2826:27;:33::i;:::-;2803:56;-1:-1:-1;;;;;;;;;;;2978:33:12;;;2974:591;;-1:-1:-1;;;;;3047:36:12;;;;;;3111:22;;;;;;;:156;;3219:48;-1:-1:-1;;;3245:10:12;-1:-1:-1;;;;;3219:48:12;3257:9;3219:15;:48::i;:::-;3111:156;;;3152:48;3168:9;3179:10;-1:-1:-1;;;;;3152:48:12;-1:-1:-1;;;3152:15:12;:48::i;:::-;3097:170;;2974:591;;;;3298:17;3318:52;-1:-1:-1;;;;;3318:52:12;;;3362:7;3318:15;:52::i;:::-;3298:72;;3410:10;-1:-1:-1;;;;;3398:22:12;:9;-1:-1:-1;;;;;3398:22:12;;:156;;3506:48;-1:-1:-1;;;3532:10:12;-1:-1:-1;;;;;3506:48:12;3544:9;3506:15;:48::i;:::-;3398:156;;;3439:48;3455:9;3466:10;-1:-1:-1;;;;;3439:48:12;-1:-1:-1;;;3439:15:12;:48::i;:::-;3384:170;;2974:591;;2616:955;;;;;;;:::o;1362:2580:10:-;1425:20;1457:15;1482:1;1475:4;:8;;;:57;;1526:4;1519:12;;1475:57;;;1502:4;1495:12;;1494:13;;1475:57;1457:75;-1:-1:-1;644:9:10;1550:28;;;1542:42;;;;;-1:-1:-1;;;1542:42:10;;;;;;;;;;;;-1:-1:-1;;;1542:42:10;;;;;;;;;;;;;;;1595:13;1621:3;1611:13;;:93;;-1:-1:-1;;;1611:93:10;;;1632:34;1611:93;1595:109;;;-1:-1:-1;1728:3:10;1718:13;;:18;1714:83;;1755:34;1747:42;1794:3;1746:51;1714:83;1821:3;1811:13;;:18;1807:83;;1848:34;1840:42;1887:3;1839:51;1807:83;1914:3;1904:13;;:18;1900:83;;1941:34;1933:42;1980:3;1932:51;1900:83;2007:4;1997:14;;:19;1993:84;;2035:34;2027:42;2074:3;2026:51;1993:84;2101:4;2091:14;;:19;2087:84;;2129:34;2121:42;2168:3;2120:51;2087:84;2195:4;2185:14;;:19;2181:84;;2223:34;2215:42;2262:3;2214:51;2181:84;2289:4;2279:14;;:19;2275:84;;2317:34;2309:42;2356:3;2308:51;2275:84;2383:5;2373:15;;:20;2369:85;;2412:34;2404:42;2451:3;2403:51;2369:85;2478:5;2468:15;;:20;2464:85;;2507:34;2499:42;2546:3;2498:51;2464:85;2573:5;2563:15;;:20;2559:85;;2602:34;2594:42;2641:3;2593:51;2559:85;2668:5;2658:15;;:20;2654:85;;2697:34;2689:42;2736:3;2688:51;2654:85;2763:6;2753:16;;:21;2749:86;;2793:34;2785:42;2832:3;2784:51;2749:86;2859:6;2849:16;;:21;2845:86;;2889:34;2881:42;2928:3;2880:51;2845:86;2955:6;2945:16;;:21;2941:86;;2985:34;2977:42;3024:3;2976:51;2941:86;3051:6;3041:16;;:21;3037:86;;3081:34;3073:42;3120:3;3072:51;3037:86;3147:7;3137:17;;:22;3133:86;;3178:33;3170:41;3216:3;3169:50;3133:86;3243:7;3233:17;;:22;3229:85;;3274:32;3266:40;3311:3;3265:49;3229:85;3338:7;3328:17;;:22;3324:83;;3369:30;3361:38;3404:3;3360:47;3324:83;3431:7;3421:17;;:22;3417:78;;3462:25;3454:33;3492:3;3453:42;3417:78;3517:1;3510:4;:8;;;3506:47;;;3548:5;-1:-1:-1;;3528:25:10;;;;;;3520:33;;3506:47;3912:7;3903:5;:17;:22;:30;;3932:1;3903:30;;;3928:1;3903:30;3886:48;;3896:2;3887:5;:11;;3886:48;3863:72;;1362:2580;;;;;:::o;749:3776:9:-;861:14;;;-1:-1:-1;;1368:1:9;1365;1358:20;1400:9;;;;-1:-1:-1;1451:13:9;;;1435:14;;;;1431:34;;-1:-1:-1;1547:10:9;1543:179;;1595:1;1581:11;:15;1573:24;;;;;;-1:-1:-1;1648:23:9;;;;-1:-1:-1;1698:13:9;;1543:179;1849:5;1835:11;:19;1827:28;;;;;;2132:17;2208:11;2205:1;2202;2195:25;2560:12;2575;;;:26;;2695:22;;;;;3498:1;3479;:15;;3478:21;;3725:17;;;3721:21;;3714:28;3783:17;;;3779:21;;3772:28;3842:17;;;3838:21;;3831:28;3901:17;;;3897:21;;3890:28;3960:17;;;3956:21;;3949:28;4020:17;;;4016:21;;;4009:28;3067:12;;;;3063:23;;;3088:1;3059:31;2337:20;;;2326:32;;;3118:12;;;;2380:21;;;;2823:16;;;;3109:21;;;;4484:11;;;;;-1:-1:-1;;749:3776:9;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "14": [
        {
          "start": 352,
          "length": 32
        },
        {
          "start": 488,
          "length": 32
        },
        {
          "start": 934,
          "length": 32
        }
      ],
      "16": [
        {
          "start": 632,
          "length": 32
        },
        {
          "start": 770,
          "length": 32
        },
        {
          "start": 901,
          "length": 32
        }
      ],
      "18": [
        {
          "start": 734,
          "length": 32
        },
        {
          "start": 852,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEPOSIT_FACTOR()": "5d48e255",
    "TWAP_PERIOD()": "7ca25184",
    "borrow(uint256)": "c5ebeaec",
    "calculateDepositOfWETHRequired(uint256)": "c4bd83fa",
    "deposits(address)": "fc7e286d",
    "token()": "fc0c546a",
    "uniswapV3Pool()": "f55ebd2a",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Minimal\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"_uniswapV3Pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"Borrowed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPOSIT_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TWAP_PERIOD\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateDepositOfWETHRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Pool\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\",\"kind\":\"dev\",\"methods\":{\"borrow(uint256)\":{\"params\":{\"borrowAmount\":\"amount of tokens the user intends to borrow\"}}},\"title\":\"PuppetV3Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(uint256)\":{\"notice\":\"Allows borrowing `borrowAmount` of tokens by first depositing three times their value in WETH.         Sender must have approved enough WETH in advance.         Calculations assume that WETH and the borrowed token have the same number of decimals.\"}},\"notice\":\"A simple lending pool using Uniswap v3 as TWAP oracle.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/puppet-v3/PuppetV3Pool.sol\":\"PuppetV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"contracts/puppet-v3/PuppetV3Pool.sol\":{\"keccak256\":\"0xd415aafd656ced21df1daa04e40b7305e7f7471a42aeba3f4afab69b9c2d5032\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1504d9b20c235db36937061a95c793289a4bc5619d7df3f8cd39750324430f1d\",\"dweb:/ipfs/QmVetw5UEnUEqnr5isU94L9F9Q6qgw7snqY9Ado2ioXg9t\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3\",\"dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3f66e0d24a6bfb74a62a667c7229c65add3075375ef77d8eb2f929994bd4ab3e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e1f9dcb71c151c5cd17f7733139100a4a5befb4f1f05e9085e905d0a32276c17\",\"dweb:/ipfs/QmNZBS1kh2y92bKufQbxxfpVRC1aAJDJD5B8qjmFyhuwMq\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xf24785c7c0b8afa39ec0a90d027fefca682ce3540d8448fc0f90075a7e1b92ca\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://eb1ac49b3b9fccad8ab5b0df0ef502d61ce68114d5c45784d0c61b483349cf78\",\"dweb:/ipfs/QmZky2WujN7H9n2JQWNzTzShcAkG7NGWoJGxTawkd64K4D\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20Minimal",
              "name": "_weth",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Minimal",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "contract IUniswapV3Pool",
              "name": "_uniswapV3Pool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Borrowed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEPOSIT_FACTOR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TWAP_PERIOD",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateDepositOfWETHRequired",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20Minimal",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniswapV3Pool",
          "outputs": [
            {
              "internalType": "contract IUniswapV3Pool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IERC20Minimal",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(uint256)": {
            "params": {
              "borrowAmount": "amount of tokens the user intends to borrow"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(uint256)": {
            "notice": "Allows borrowing `borrowAmount` of tokens by first depositing three times their value in WETH.         Sender must have approved enough WETH in advance.         Calculations assume that WETH and the borrowed token have the same number of decimals."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/=node_modules/@gnosis.pm/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solady/=node_modules/solady/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/puppet-v3/PuppetV3Pool.sol": "PuppetV3Pool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/puppet-v3/PuppetV3Pool.sol": {
        "keccak256": "0xd415aafd656ced21df1daa04e40b7305e7f7471a42aeba3f4afab69b9c2d5032",
        "urls": [
          "bzz-raw://1504d9b20c235db36937061a95c793289a4bc5619d7df3f8cd39750324430f1d",
          "dweb:/ipfs/QmVetw5UEnUEqnr5isU94L9F9Q6qgw7snqY9Ado2ioXg9t"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol": {
        "keccak256": "0xbbb4fbd3cf2221bba3218d27871f61f2852ff296cbe81946b935481ff181f735",
        "urls": [
          "bzz-raw://8ded0534518213ad286cbd3b7a120ec2070da0451f6d02e0bae6706b35f65fa3",
          "dweb:/ipfs/QmcUVLd6GuJJ1Aw895kHprUQpwZwbo2SqPoSif3BciMfNF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d",
        "urls": [
          "bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e",
          "dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9",
        "urls": [
          "bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81",
          "dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x3f66e0d24a6bfb74a62a667c7229c65add3075375ef77d8eb2f929994bd4ab3e",
        "urls": [
          "bzz-raw://e1f9dcb71c151c5cd17f7733139100a4a5befb4f1f05e9085e905d0a32276c17",
          "dweb:/ipfs/QmNZBS1kh2y92bKufQbxxfpVRC1aAJDJD5B8qjmFyhuwMq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xf24785c7c0b8afa39ec0a90d027fefca682ce3540d8448fc0f90075a7e1b92ca",
        "urls": [
          "bzz-raw://eb1ac49b3b9fccad8ab5b0df0ef502d61ce68114d5c45784d0c61b483349cf78",
          "dweb:/ipfs/QmZky2WujN7H9n2JQWNzTzShcAkG7NGWoJGxTawkd64K4D"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/puppet-v3/PuppetV3Pool.sol",
    "id": 178,
    "exportedSymbols": {
      "FullMath": [
        864
      ],
      "IERC20Minimal": [
        249
      ],
      "IUniswapV3Pool": [
        271
      ],
      "IUniswapV3PoolActions": [
        367
      ],
      "IUniswapV3PoolDerivedState": [
        398
      ],
      "IUniswapV3PoolEvents": [
        517
      ],
      "IUniswapV3PoolImmutables": [
        557
      ],
      "IUniswapV3PoolOwnerActions": [
        583
      ],
      "IUniswapV3PoolState": [
        691
      ],
      "OracleLibrary": [
        2039
      ],
      "PuppetV3Pool": [
        177
      ],
      "TickMath": [
        1399
      ],
      "TransferHelper": [
        1450
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2673:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "57:65:0",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol",
        "scope": 178,
        "sourceUnit": 250,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "123:66:0",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "scope": 178,
        "sourceUnit": 272,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "190:65:0",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-core/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-core/contracts/libraries/TransferHelper.sol",
        "scope": 178,
        "sourceUnit": 1451,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "256:69:0",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol",
        "scope": 178,
        "sourceUnit": 2040,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 177,
        "nodeType": "ContractDefinition",
        "src": "489:2215:0",
        "nodes": [
          {
            "id": 9,
            "nodeType": "VariableDeclaration",
            "src": "517:42:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "5d48e255",
            "mutability": "constant",
            "name": "DEPOSIT_FACTOR",
            "scope": 177,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "517:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "558:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "id": 12,
            "nodeType": "VariableDeclaration",
            "src": "565:47:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "7ca25184",
            "mutability": "constant",
            "name": "TWAP_PERIOD",
            "scope": 177,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 10,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "565:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "602:10:0",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "id": 14,
            "nodeType": "VariableDeclaration",
            "src": "619:35:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "immutable",
            "name": "weth",
            "scope": 177,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Minimal_$249",
              "typeString": "contract IERC20Minimal"
            },
            "typeName": {
              "id": 13,
              "name": "IERC20Minimal",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 249,
              "src": "619:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                "typeString": "contract IERC20Minimal"
              }
            },
            "visibility": "public"
          },
          {
            "id": 16,
            "nodeType": "VariableDeclaration",
            "src": "660:36:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "immutable",
            "name": "token",
            "scope": 177,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Minimal_$249",
              "typeString": "contract IERC20Minimal"
            },
            "typeName": {
              "id": 15,
              "name": "IERC20Minimal",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 249,
              "src": "660:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                "typeString": "contract IERC20Minimal"
              }
            },
            "visibility": "public"
          },
          {
            "id": 18,
            "nodeType": "VariableDeclaration",
            "src": "702:45:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "f55ebd2a",
            "mutability": "immutable",
            "name": "uniswapV3Pool",
            "scope": 177,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
              "typeString": "contract IUniswapV3Pool"
            },
            "typeName": {
              "id": 17,
              "name": "IUniswapV3Pool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 271,
              "src": "702:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
                "typeString": "contract IUniswapV3Pool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 22,
            "nodeType": "VariableDeclaration",
            "src": "754:43:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc7e286d",
            "mutability": "mutable",
            "name": "deposits",
            "scope": 177,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "762:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "754:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 20,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "773:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 30,
            "nodeType": "EventDefinition",
            "src": "804:86:0",
            "nodes": [],
            "anonymous": false,
            "name": "Borrowed",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "819:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "845:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "868:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "868:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "818:71:0"
            }
          },
          {
            "id": 52,
            "nodeType": "FunctionDefinition",
            "src": "896:179:0",
            "nodes": [],
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "982:93:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "992:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                        "typeString": "contract IERC20Minimal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "999:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                        "typeString": "contract IERC20Minimal"
                      }
                    },
                    "src": "992:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                      "typeString": "contract IERC20Minimal"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "992:12:0"
                },
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1014:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                        "typeString": "contract IERC20Minimal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1022:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                        "typeString": "contract IERC20Minimal"
                      }
                    },
                    "src": "1014:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                      "typeString": "contract IERC20Minimal"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1014:14:0"
                },
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "uniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1038:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48,
                      "name": "_uniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1054:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "src": "1038:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:30:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "908:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                    "typeString": "contract IERC20Minimal"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "IERC20Minimal",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 249,
                    "src": "908:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                      "typeString": "contract IERC20Minimal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "929:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                    "typeString": "contract IERC20Minimal"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "IERC20Minimal",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 249,
                    "src": "929:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                      "typeString": "contract IERC20Minimal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_uniswapV3Pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "951:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
                    "typeString": "contract IUniswapV3Pool"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "IUniswapV3Pool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 271,
                    "src": "951:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:74:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:0:0"
            },
            "scope": 177,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103,
            "nodeType": "FunctionDefinition",
            "src": "1445:540:0",
            "nodes": [],
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1492:493:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "depositOfWETHRequired",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1559:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1559:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1622:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60,
                      "name": "calculateDepositOfWETHRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "1591:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1559:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1689:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1689:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 71,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1709:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PuppetV3Pool_$177",
                              "typeString": "contract PuppetV3Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PuppetV3Pool_$177",
                              "typeString": "contract PuppetV3Pool"
                            }
                          ],
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1701:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 69,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1701:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1701:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73,
                        "name": "depositOfWETHRequired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1716:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1671:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                          "typeString": "contract IERC20Minimal"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 230,
                      "src": "1671:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1671:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:67:0"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 76,
                        "name": "deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1780:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "expression": {
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1789:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1789:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1780:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "depositOfWETHRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1804:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1780:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1872:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                              "typeString": "contract IERC20Minimal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                              "typeString": "contract IERC20Minimal"
                            }
                          ],
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1864:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1864:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1864:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1880:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1880:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1892:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 83,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "1836:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$1450_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1449,
                      "src": "1836:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:69:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1930:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1930:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 98,
                        "name": "depositOfWETHRequired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1942:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1965:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 95,
                      "name": "Borrowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1921:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "EmitStatement",
                  "src": "1916:62:0"
                }
              ]
            },
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "1081:359:0",
              "text": " @notice Allows borrowing `borrowAmount` of tokens by first depositing three times their value in WETH.\n         Sender must have approved enough WETH in advance.\n         Calculations assume that WETH and the borrowed token have the same number of decimals.\n @param borrowAmount amount of tokens the user intends to borrow"
            },
            "functionSelector": "c5ebeaec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1461:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1460:22:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1492:0:0"
            },
            "scope": 177,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 123,
            "nodeType": "FunctionDefinition",
            "src": "1991:193:0",
            "nodes": [],
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2077:107:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 111,
                      "mutability": "mutable",
                      "name": "quote",
                      "nodeType": "VariableDeclaration",
                      "scope": 122,
                      "src": "2087:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2087:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 117,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 114,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "2130:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 113,
                          "name": "_toUint128",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "2119:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                            "typeString": "function (uint256) pure returns (uint128)"
                          }
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2119:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 112,
                      "name": "_getOracleQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2103:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint128_$returns$_t_uint256_$",
                        "typeString": "function (uint128) view returns (uint256)"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2103:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2087:51:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 118,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2155:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 119,
                      "name": "DEPOSIT_FACTOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2163:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2155:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 109,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "2148:29:0"
                }
              ]
            },
            "functionSelector": "c4bd83fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateDepositOfWETHRequired",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2031:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2030:16:0"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2068:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:9:0"
            },
            "scope": 177,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 156,
            "nodeType": "FunctionDefinition",
            "src": "2190:380:0",
            "nodes": [],
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "2262:308:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    131,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "arithmeticMeanTick",
                      "nodeType": "VariableDeclaration",
                      "scope": 155,
                      "src": "2273:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "2273:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 140,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 136,
                            "name": "uniswapV3Pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2332:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$271",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          ],
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2324:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 134,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2324:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2324:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138,
                        "name": "TWAP_PERIOD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2348:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 132,
                        "name": "OracleLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2039,
                        "src": "2302:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2039_$",
                          "typeString": "type(library OracleLibrary)"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "consult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1585,
                      "src": "2302:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_int24_$_t_uint128_$",
                        "typeString": "function (address,uint32) view returns (int24,uint128)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int24_$_t_uint128_$",
                      "typeString": "tuple(int24,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2272:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 143,
                        "name": "arithmeticMeanTick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2419:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 144,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "2451:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 147,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "2493:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                              "typeString": "contract IERC20Minimal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                              "typeString": "contract IERC20Minimal"
                            }
                          ],
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2485:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2485:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2485:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 151,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2534:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                              "typeString": "contract IERC20Minimal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Minimal_$249",
                              "typeString": "contract IERC20Minimal"
                            }
                          ],
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2526:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 149,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2526:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2526:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "OracleLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2039,
                        "src": "2377:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2039_$",
                          "typeString": "type(library OracleLibrary)"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuoteAtTick",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1683,
                      "src": "2377:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (int24,uint128,address,address) pure returns (uint256)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:186:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 154,
                  "nodeType": "Return",
                  "src": "2370:193:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOracleQuote",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2215:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2215:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2214:16:0"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2253:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2252:9:0"
            },
            "scope": 177,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 176,
            "nodeType": "FunctionDefinition",
            "src": "2576:126:0",
            "nodes": [],
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2645:57:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 164,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "2663:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "components": [
                            {
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 165,
                                "name": "n",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "2674:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 168,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 158,
                                    "src": "2686:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2678:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 166,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2678:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2678:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "2674:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "id": 171,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2673:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "2663:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2655:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2655:40:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toUint128",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2596:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2595:16:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2634:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2634:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2633:11:0"
            },
            "scope": 177,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "327:161:0",
          "text": " @title PuppetV3Pool\n @notice A simple lending pool using Uniswap v3 as TWAP oracle.\n @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          177
        ],
        "name": "PuppetV3Pool",
        "scope": 178
      }
    ],
    "license": "MIT"
  },
  "id": 0
}