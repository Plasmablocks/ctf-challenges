{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidDepositAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "REWARDS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accountingToken",
      "outputs": [
        {
          "internalType": "contract AccountingToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributeRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isNewRewardsRound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRecordedSnapshotTimestamp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastRewardTimestamps",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastSnapshotIdForRewards",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract RewardToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roundNumber",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b506040516136c33803806136c383398101604081905261002f9161018d565b6001600160a01b03811660805260405161004890610173565b604051809103906000f080158015610064573d6000803e3d6000fd5b506001600160a01b031660a05260405161007d90610180565b604051809103906000f080158015610099573d6000803e3d6000fd5b506001600160a01b031660c0526100ae6100b4565b506101d6565b60a0516001600160a01b0316639711715a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156100f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011a91906101bd565b60008054600160c01b6001600160401b03428116600160801b026001600160c01b03199093166001600160801b039590951694909417919091178181048416600101909316026001600160c01b03909216919091179055565b61178080610b5c83390190565b6113e7806122dc83390190565b60006020828403121561019f57600080fd5b81516001600160a01b03811681146101b657600080fd5b9392505050565b6000602082840312156101cf57600080fd5b5051919050565b60805160a05160c05161091f61023d6000396000818161023301526104df01526000818161020c0152818161029c0152818161036801528181610408015281816105b0015261068f01526000818161014e015281816103050152610622015261091f6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636f4a2cd0116100715780636f4a2cd0146101a35780637076b7cd146101b9578063b6b55f25146101e4578063c0034e0c146101f7578063da68cf8b14610207578063f7c618c11461022e57600080fd5b80631a465d23146100b95780632b7f81fe146100d65780632e1a7d4d1461010a5780633b632b251461011f57806343cd8f7e146101495780634e2786fb14610188575b600080fd5b6100c1610255565b60405190151581526020015b60405180910390f35b6000546100f190600160801b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016100cd565b61011d610118366004610866565b610280565b005b6100f161012d36600461087f565b60016020526000908152604090205467ffffffffffffffff1681565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100cd565b6000546100f190600160c01b900467ffffffffffffffff1681565b6101ab61032e565b6040519081526020016100cd565b6000546101cc906001600160801b031681565b6040516001600160801b0390911681526020016100cd565b61011d6101f2366004610866565b610573565b6101ab68056bc75e2d6310000081565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b60008054610278906206978090600160801b900467ffffffffffffffff166108af565b421015905090565b604051632770a7eb60e21b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156102e857600080fd5b505af11580156102fc573d6000803e3d6000fd5b5050505061032b7f00000000000000000000000000000000000000000000000000000000000000003383610649565b50565b6000610338610255565b156103455761034561068d565b60008054604051630981b24d60e41b81526001600160801b0390911660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063981b24d090602401602060405180830381865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db91906108d0565b6000805460405163277166bf60e11b81523360048201526001600160801b039091166024820152919250907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634ee2cd7e90604401602060405180830381865afa158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b91906108d0565b905060008111801561048d5750600082115b1561056e576104a68168056bc75e2d631000008461076b565b92506000831180156104be57506104bc33610792565b155b1561056e576040516340c10f1960e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561052b57600080fd5b505af115801561053f573d6000803e3d6000fd5b5050336000908152600160205260409020805467ffffffffffffffff19164267ffffffffffffffff1617905550505b505090565b806000036105945760405163fe9ba5cd60e01b815260040160405180910390fd5b6040516340c10f1960e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b5050505061061c61032e565b5061032b7f0000000000000000000000000000000000000000000000000000000000000000333084610818565b60405163a9059cbb6000528260205281604052602060006044601c6000885af13d156001600051141716610685576390b8ec186000526004601cfd5b604052505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639711715a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071191906108d0565b60008054600160c01b67ffffffffffffffff428116600160801b026001600160c01b03199093166001600160801b039590951694909417919091178181048416600101909316026001600160c01b03909216919091179055565b600082600019048411830215820261078b5763ad251c276000526004601cfd5b5091020490565b600080546001600160a01b03831682526001602052604082205467ffffffffffffffff600160801b909204821691161080159061081257506000546107ec906206978090600160801b900467ffffffffffffffff166108af565b6001600160a01b03831660009081526001602052604090205467ffffffffffffffff1611155b92915050565b6040516323b872dd600052836020528260405281606052602060006064601c6000895af13d15600160005114171661085857637939f4246000526004601cfd5b600060605260405250505050565b60006020828403121561087857600080fd5b5035919050565b60006020828403121561089157600080fd5b81356001600160a01b03811681146108a857600080fd5b9392505050565b8082018082111561081257634e487b7160e01b600052601160045260246000fd5b6000602082840312156108e257600080fd5b505191905056fea26469706673582212202cec8a0d39fb126754c19164a61d8c89c261eefb4a8299adaa1c0664f7e1864b64736f6c6343000813003360806040523480156200001157600080fd5b5060405180604001604052806006815260200165392a37b5b2b760d11b81525060405180604001604052806004815260200163392a25a760e11b81525081600390816200005f9190620001c1565b5060046200006e8282620001c1565b50505062000082336200009560201b60201c565b6200008f336007620000d1565b6200028d565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b638b78c6d8600c52816000526020600c208181541791508181555080600c5160601c7f715ad5ce61fc9595c7b415289d59cf203f23a94fa06f04af7e489a0a76e1fe26600080a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014757607f821691505b6020821081036200016857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001bc57600081815260208120601f850160051c81016020861015620001975750805b601f850160051c820191505b81811015620001b857828155600101620001a3565b5050505b505050565b81516001600160401b03811115620001dd57620001dd6200011c565b620001f581620001ee845462000132565b846200016e565b602080601f8311600181146200022d5760008415620002145750858301515b600019600386901b1c1916600185901b178555620001b8565b600085815260208120601f198616915b828110156200025e578886015182559484019460019091019084016200023d565b50858210156200027d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114e3806200029d6000396000f3fe6080604052600436106102045760003560e01c806354d1f13d116101185780639dc29fac116100a0578063d7533f021161006f578063d7533f021461058f578063dd62ed3e146105ad578063f04e283e146105cd578063f2fde38b146105e0578063fee81cf4146105f357600080fd5b80639dc29fac1461053a578063a457c2d71461055a578063a9059cbb14610234578063d53913931461057a57600080fd5b80637359e41f116100e75780637359e41f146104975780638da5cb5b146104c457806395d89b41146104f05780639711715a14610505578063981b24d01461051a57600080fd5b806354d1f13d1461043c5780637028e2cd1461044457806370a0823114610459578063715018a61461048f57600080fd5b8063256929621161019b578063395093511161016a578063395093511461039257806340c10f19146103b25780634a4ee7b1146103d25780634ee2cd7e146103e5578063514e62fc1461040557600080fd5b80632569296214610326578063282c51f31461032e5780632de9480714610343578063313ce5671461037657600080fd5b8063183a4f6e116101d7578063183a4f6e146102a75780631c10893f146102bc5780631cd64df4146102cf57806323b872dd1461030657600080fd5b806306fdde0314610209578063095ea7b31461023457806313a661ed1461026457806318160ddd14610292575b600080fd5b34801561021557600080fd5b5061021e610626565b60405161022b91906111a0565b60405180910390f35b34801561024057600080fd5b5061025461024f366004611205565b6106b8565b604051901515815260200161022b565b34801561027057600080fd5b5061028461027f366004611256565b6106d2565b60405190815260200161022b565b34801561029e57600080fd5b50600254610284565b6102ba6102b536600461131b565b6106fb565b005b6102ba6102ca366004611205565b610708565b3480156102db57600080fd5b506102546102ea366004611205565b638b78c6d8600c90815260009290925260209091205481161490565b34801561031257600080fd5b50610254610321366004611334565b61071e565b6102ba610742565b34801561033a57600080fd5b50610284600481565b34801561034f57600080fd5b5061028461035e366004611370565b638b78c6d8600c908152600091909152602090205490565b34801561038257600080fd5b506040516012815260200161022b565b34801561039e57600080fd5b506102546103ad366004611205565b610792565b3480156103be57600080fd5b506102ba6103cd366004611205565b6107b4565b6102ba6103e0366004611205565b6107ce565b3480156103f157600080fd5b50610284610400366004611205565b6107e0565b34801561041157600080fd5b50610254610420366004611205565b638b78c6d8600c90815260009290925260209091205416151590565b6102ba610839565b34801561045057600080fd5b50610284600281565b34801561046557600080fd5b50610284610474366004611370565b6001600160a01b031660009081526020819052604090205490565b6102ba610875565b3480156104a357600080fd5b506104b76104b236600461131b565b610889565b60405161022b919061138b565b3480156104d057600080fd5b50638b78c6d819546040516001600160a01b03909116815260200161022b565b3480156104fc57600080fd5b5061021e6108c2565b34801561051157600080fd5b506102846108d1565b34801561052657600080fd5b5061028461053536600461131b565b6108ec565b34801561054657600080fd5b506102ba610555366004611205565b610917565b34801561056657600080fd5b50610254610575366004611205565b61092c565b34801561058657600080fd5b50610284600181565b34801561059b57600080fd5b506040516202a300815260200161022b565b3480156105b957600080fd5b506102846105c83660046113d2565b6109ac565b6102ba6105db366004611370565b6109d7565b6102ba6105ee366004611370565b610a14565b3480156105ff57600080fd5b5061028461060e366004611370565b63389a75e1600c908152600091909152602090205490565b60606003805461063590611405565b80601f016020809104026020016040519081016040528092919081815260200182805461066190611405565b80156106ae5780601f10610683576101008083540402835291602001916106ae565b820191906000526020600020905b81548152906001019060200180831161069157829003601f168201915b5050505050905090565b6000336106c6818585610a4c565b60019150505b92915050565b6000815160051b5b80156106f557828101516001901b90911790601f19016106da565b50919050565b6107053382610a65565b50565b610710610ab4565b61071a8282610acf565b5050565b60003361072c858285610b1a565b610737858585610a4c565b506001949350505050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6000336106c68185856107a583836109ac565b6107af919061144f565b610a4c565b60016107bf81610b94565b6107c98383610bba565b505050565b6107d6610ab4565b61071a8282610a65565b6001600160a01b038216600090815260056020526040812081908190610807908590610ca5565b915091508161082e576001600160a01b038516600090815260208190526040902054610830565b805b95945050505050565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b61087d610ab4565b6108876000610d9b565b565b604051602081016000835b81835260051b6020169091019060010183811c80610894575050601f198282030160051c8252604052919050565b60606004805461063590611405565b600060026108de81610b94565b6108e6610dd9565b91505090565b60008060006108fc846006610ca5565b915091508161090d5760025461090f565b805b949350505050565b600461092281610b94565b6107c98383610e33565b6000338161093a82866109ac565b90508381101561099f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6107378286868403610a4c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6109df610ab4565b63389a75e1600c52806000526020600c208054421115610a0757636f5e88186000526004601cfd5b6000905561070581610d9b565b610a1c610ab4565b6001600160a01b038116610a4357604051633a247dd760e11b815260040160405180910390fd5b61070581610d9b565b60405163d623472560e01b815260040160405180910390fd5b638b78c6d8600c52816000526020600c20805482811681189250508181555080600c5160601c7f715ad5ce61fc9595c7b415289d59cf203f23a94fa06f04af7e489a0a76e1fe26600080a35050565b638b78c6d819543314610887576382b429006000526004601cfd5b638b78c6d8600c52816000526020600c208181541791508181555080600c5160601c7f715ad5ce61fc9595c7b415289d59cf203f23a94fa06f04af7e489a0a76e1fe26600080a35050565b6000610b2684846109ac565b90506000198114610b8e5781811015610b815760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610996565b610b8e8484848403610a4c565b50505050565b638b78c6d8600c5233600052806020600c205416610705576382b429006000526004601cfd5b6001600160a01b038216610c105760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610996565b610c1c60008383610f8d565b8060026000828254610c2e919061144f565b90915550506001600160a01b03821660009081526020819052604081208054839290610c5b90849061144f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008060008411610cf15760405162461bcd60e51b815260206004820152601660248201527504552433230536e617073686f743a20696420697320360541b6044820152606401610996565b610cf9610fd5565b841115610d485760405162461bcd60e51b815260206004820152601d60248201527f4552433230536e617073686f743a206e6f6e6578697374656e742069640000006044820152606401610996565b6000610d548486610fe5565b84549091508103610d6c576000809250925050610d94565b6001846001018281548110610d8357610d83611462565b906000526020600020015492509250505b9250929050565b638b78c6d81980546001600160a01b039092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b6000610de9600880546001019055565b6000610df3610fd5565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb6781604051610e2691815260200190565b60405180910390a1919050565b6001600160a01b038216610e935760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610996565b610e9f82600083610f8d565b6001600160a01b03821660009081526020819052604090205481811015610f135760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610996565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610f42908490611478565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038316610fac57610fa4826110aa565b6107c96110dc565b6001600160a01b038216610fc357610fa4836110aa565b610fcc836110aa565b6107c9826110aa565b6000610fe060085490565b905090565b81546000908103610ff8575060006106cc565b82546000905b8082101561105457600061101283836110ea565b90508486828154811061102757611027611462565b906000526020600020015411156110405780915061104e565b61104b81600161144f565b92505b50610ffe565b6000821180156110895750838561106c600185611478565b8154811061107c5761107c611462565b9060005260206000200154145b156110a257611099600183611478565b925050506106cc565b5090506106cc565b6001600160a01b03811660009081526005602090815260408083209183905290912054610705919061110c565b61110c565b61088760066110d760025490565b60006110f9600284841861148b565b6111059084841661144f565b9392505050565b6000611116610fd5565b90508061112284611156565b10156107c9578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b8054600090810361116957506000919050565b8154829061117990600190611478565b8154811061118957611189611462565b90600052602060002001549050919050565b919050565b600060208083528351808285015260005b818110156111cd578581018301518582016040015282016111b1565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461119b57600080fd5b6000806040838503121561121857600080fd5b611221836111ee565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b803560ff8116811461119b57600080fd5b6000602080838503121561126957600080fd5b823567ffffffffffffffff8082111561128157600080fd5b818501915085601f83011261129557600080fd5b8135818111156112a7576112a761122f565b8060051b604051601f19603f830116810181811085821117156112cc576112cc61122f565b6040529182528482019250838101850191888311156112ea57600080fd5b938501935b8285101561130f5761130085611245565b845293850193928501926112ef565b98975050505050505050565b60006020828403121561132d57600080fd5b5035919050565b60008060006060848603121561134957600080fd5b611352846111ee565b9250611360602085016111ee565b9150604084013590509250925092565b60006020828403121561138257600080fd5b611105826111ee565b6020808252825182820181905260009190848201906040850190845b818110156113c657835160ff16835292840192918401916001016113a7565b50909695505050505050565b600080604083850312156113e557600080fd5b6113ee836111ee565b91506113fc602084016111ee565b90509250929050565b600181811c9082168061141957607f821691505b6020821081036106f557634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106cc576106cc611439565b634e487b7160e01b600052603260045260246000fd5b818103818111156106cc576106cc611439565b6000826114a857634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212201e31f4bfc46889dde9a6c2dd3b641f0c024c8f4c10d2ee2d9ad14752f9cc2e2464736f6c6343000813003360806040523480156200001157600080fd5b506040518060400160405280600c81526020016b2932bbb0b932102a37b5b2b760a11b815250604051806040016040528060038152602001621495d560ea1b8152508160039081620000649190620001c6565b506004620000738282620001c6565b50505062000087336200009a60201b60201c565b62000094336001620000d6565b62000292565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b638b78c6d8600c52816000526020600c208181541791508181555080600c5160601c7f715ad5ce61fc9595c7b415289d59cf203f23a94fa06f04af7e489a0a76e1fe26600080a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014c57607f821691505b6020821081036200016d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001c157600081815260208120601f850160051c810160208610156200019c5750805b601f850160051c820191505b81811015620001bd57828155600101620001a8565b5050505b505050565b81516001600160401b03811115620001e257620001e262000121565b620001fa81620001f3845462000137565b8462000173565b602080601f831160018114620002325760008415620002195750858301515b600019600386901b1c1916600185901b178555620001bd565b600085815260208120601f198616915b82811015620002635788860151825594840194600190910190840162000242565b5085821015620002825787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61114580620002a26000396000f3fe6080604052600436106101c25760003560e01c8063514e62fc116100f7578063a457c2d711610095578063dd62ed3e11610064578063dd62ed3e146104ec578063f04e283e1461050c578063f2fde38b1461051f578063fee81cf41461053257600080fd5b8063a457c2d714610479578063a9059cbb14610499578063d5391393146104b9578063d7533f02146104ce57600080fd5b8063715018a6116100d1578063715018a6146104035780637359e41f1461040b5780638da5cb5b1461043857806395d89b411461046457600080fd5b8063514e62fc1461038e57806354d1f13d146103c557806370a08231146103cd57600080fd5b806323b872dd11610164578063313ce5671161013e578063313ce5671461031f578063395093511461033b57806340c10f191461035b5780634a4ee7b11461037b57600080fd5b806323b872dd146102c457806325692962146102e45780632de94807146102ec57600080fd5b806318160ddd116101a057806318160ddd14610250578063183a4f6e146102655780631c10893f1461027a5780631cd64df41461028d57600080fd5b806306fdde03146101c7578063095ea7b3146101f257806313a661ed14610222575b600080fd5b3480156101d357600080fd5b506101dc610565565b6040516101e99190610e49565b60405180910390f35b3480156101fe57600080fd5b5061021261020d366004610eb3565b6105f7565b60405190151581526020016101e9565b34801561022e57600080fd5b5061024261023d366004610f04565b610611565b6040519081526020016101e9565b34801561025c57600080fd5b50600254610242565b610278610273366004610fc9565b61063a565b005b610278610288366004610eb3565b610647565b34801561029957600080fd5b506102126102a8366004610eb3565b638b78c6d8600c90815260009290925260209091205481161490565b3480156102d057600080fd5b506102126102df366004610fe2565b61065d565b610278610681565b3480156102f857600080fd5b5061024261030736600461101e565b638b78c6d8600c908152600091909152602090205490565b34801561032b57600080fd5b50604051601281526020016101e9565b34801561034757600080fd5b50610212610356366004610eb3565b6106d1565b34801561036757600080fd5b50610278610376366004610eb3565b6106f3565b610278610389366004610eb3565b61070d565b34801561039a57600080fd5b506102126103a9366004610eb3565b638b78c6d8600c90815260009290925260209091205416151590565b61027861071f565b3480156103d957600080fd5b506102426103e836600461101e565b6001600160a01b031660009081526020819052604090205490565b61027861075b565b34801561041757600080fd5b5061042b610426366004610fc9565b61076f565b6040516101e99190611040565b34801561044457600080fd5b50638b78c6d819546040516001600160a01b0390911681526020016101e9565b34801561047057600080fd5b506101dc6107a8565b34801561048557600080fd5b50610212610494366004610eb3565b6107b7565b3480156104a557600080fd5b506102126104b4366004610eb3565b610837565b3480156104c557600080fd5b50610242600181565b3480156104da57600080fd5b506040516202a30081526020016101e9565b3480156104f857600080fd5b50610242610507366004611087565b610845565b61027861051a36600461101e565b610870565b61027861052d36600461101e565b6108ad565b34801561053e57600080fd5b5061024261054d36600461101e565b63389a75e1600c908152600091909152602090205490565b606060038054610574906110ba565b80601f01602080910402602001604051908101604052809291908181526020018280546105a0906110ba565b80156105ed5780601f106105c2576101008083540402835291602001916105ed565b820191906000526020600020905b8154815290600101906020018083116105d057829003601f168201915b5050505050905090565b6000336106058185856108e5565b60019150505b92915050565b6000815160051b5b801561063457828101516001901b90911790601f1901610619565b50919050565b6106443382610a09565b50565b61064f610a58565b6106598282610a73565b5050565b60003361066b858285610abe565b610676858585610b38565b506001949350505050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6000336106058185856106e48383610845565b6106ee91906110ee565b6108e5565b60016106fe81610d06565b6107088383610d2c565b505050565b610715610a58565b6106598282610a09565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b610763610a58565b61076d6000610e0b565b565b604051602081016000835b81835260051b6020169091019060010183811c8061077a575050601f198282030160051c8252604052919050565b606060048054610574906110ba565b600033816107c58286610845565b90508381101561082a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61067682868684036108e5565b600033610605818585610b38565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610878610a58565b63389a75e1600c52806000526020600c2080544211156108a057636f5e88186000526004601cfd5b6000905561064481610e0b565b6108b5610a58565b6001600160a01b0381166108dc57604051633a247dd760e11b815260040160405180910390fd5b61064481610e0b565b6001600160a01b0383166109475760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610821565b6001600160a01b0382166109a85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610821565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b638b78c6d8600c52816000526020600c20805482811681189250508181555080600c5160601c7f715ad5ce61fc9595c7b415289d59cf203f23a94fa06f04af7e489a0a76e1fe26600080a35050565b638b78c6d81954331461076d576382b429006000526004601cfd5b638b78c6d8600c52816000526020600c208181541791508181555080600c5160601c7f715ad5ce61fc9595c7b415289d59cf203f23a94fa06f04af7e489a0a76e1fe26600080a35050565b6000610aca8484610845565b90506000198114610b325781811015610b255760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610821565b610b3284848484036108e5565b50505050565b6001600160a01b038316610b9c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610821565b6001600160a01b038216610bfe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610821565b6001600160a01b03831660009081526020819052604090205481811015610c765760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610821565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610cad9084906110ee565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf991815260200190565b60405180910390a3610b32565b638b78c6d8600c5233600052806020600c205416610644576382b429006000526004601cfd5b6001600160a01b038216610d825760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610821565b8060026000828254610d9491906110ee565b90915550506001600160a01b03821660009081526020819052604081208054839290610dc19084906110ee565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b638b78c6d81980546001600160a01b039092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b600060208083528351808285015260005b81811015610e7657858101830151858201604001528201610e5a565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610eae57600080fd5b919050565b60008060408385031215610ec657600080fd5b610ecf83610e97565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b803560ff81168114610eae57600080fd5b60006020808385031215610f1757600080fd5b823567ffffffffffffffff80821115610f2f57600080fd5b818501915085601f830112610f4357600080fd5b813581811115610f5557610f55610edd565b8060051b604051601f19603f83011681018181108582111715610f7a57610f7a610edd565b604052918252848201925083810185019188831115610f9857600080fd5b938501935b82851015610fbd57610fae85610ef3565b84529385019392850192610f9d565b98975050505050505050565b600060208284031215610fdb57600080fd5b5035919050565b600080600060608486031215610ff757600080fd5b61100084610e97565b925061100e60208501610e97565b9150604084013590509250925092565b60006020828403121561103057600080fd5b61103982610e97565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561107b57835160ff168352928401929184019160010161105c565b50909695505050505050565b6000806040838503121561109a57600080fd5b6110a383610e97565b91506110b160208401610e97565b90509250929050565b600181811c908216806110ce57607f821691505b60208210810361063457634e487b7160e01b600052602260045260246000fd5b8082018082111561060b57634e487b7160e01b600052601160045260246000fdfea2646970667358221220a9df6003bb009f039f5256b200b694acf2901ae66bd919bb16bc0b6324362d6864736f6c63430008130033",
    "sourceMap": "359:3242:26:-:0;;;1194:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1280:23:26;;;;1331:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1313:39:26;;;1376:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1362:31:26;;;1404:17;:15;:17::i;:::-;1194:234;359:3242;;2899:236;2979:15;;-1:-1:-1;;;;;2979:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2944:24;:62;;-1:-1:-1;;;;;;;;3055:15:26;3016:55;;-1:-1:-1;;;3016:55:26;-1:-1:-1;;;;;;3016:55:26;;;-1:-1:-1;;;;;2944:62:26;;;;3016:55;;;;;;;;3105:13;;;;;2944:62;3105:13;;;;;-1:-1:-1;;;;;3105:13:26;;;;;;;;;2899:236::o;359:3242::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:290:95:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:95;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:95:o;309:184::-;379:6;432:2;420:9;411:7;407:23;403:32;400:52;;;448:1;445;438:12;400:52;-1:-1:-1;471:16:95;;309:184;-1:-1:-1;309:184:95:o;:::-;359:3242:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80636f4a2cd0116100715780636f4a2cd0146101a35780637076b7cd146101b9578063b6b55f25146101e4578063c0034e0c146101f7578063da68cf8b14610207578063f7c618c11461022e57600080fd5b80631a465d23146100b95780632b7f81fe146100d65780632e1a7d4d1461010a5780633b632b251461011f57806343cd8f7e146101495780634e2786fb14610188575b600080fd5b6100c1610255565b60405190151581526020015b60405180910390f35b6000546100f190600160801b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016100cd565b61011d610118366004610866565b610280565b005b6100f161012d36600461087f565b60016020526000908152604090205467ffffffffffffffff1681565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100cd565b6000546100f190600160c01b900467ffffffffffffffff1681565b6101ab61032e565b6040519081526020016100cd565b6000546101cc906001600160801b031681565b6040516001600160801b0390911681526020016100cd565b61011d6101f2366004610866565b610573565b6101ab68056bc75e2d6310000081565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b60008054610278906206978090600160801b900467ffffffffffffffff166108af565b421015905090565b604051632770a7eb60e21b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156102e857600080fd5b505af11580156102fc573d6000803e3d6000fd5b5050505061032b7f00000000000000000000000000000000000000000000000000000000000000003383610649565b50565b6000610338610255565b156103455761034561068d565b60008054604051630981b24d60e41b81526001600160801b0390911660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063981b24d090602401602060405180830381865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db91906108d0565b6000805460405163277166bf60e11b81523360048201526001600160801b039091166024820152919250907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634ee2cd7e90604401602060405180830381865afa158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b91906108d0565b905060008111801561048d5750600082115b1561056e576104a68168056bc75e2d631000008461076b565b92506000831180156104be57506104bc33610792565b155b1561056e576040516340c10f1960e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561052b57600080fd5b505af115801561053f573d6000803e3d6000fd5b5050336000908152600160205260409020805467ffffffffffffffff19164267ffffffffffffffff1617905550505b505090565b806000036105945760405163fe9ba5cd60e01b815260040160405180910390fd5b6040516340c10f1960e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b5050505061061c61032e565b5061032b7f0000000000000000000000000000000000000000000000000000000000000000333084610818565b60405163a9059cbb6000528260205281604052602060006044601c6000885af13d156001600051141716610685576390b8ec186000526004601cfd5b604052505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639711715a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071191906108d0565b60008054600160c01b67ffffffffffffffff428116600160801b026001600160c01b03199093166001600160801b039590951694909417919091178181048416600101909316026001600160c01b03909216919091179055565b600082600019048411830215820261078b5763ad251c276000526004601cfd5b5091020490565b600080546001600160a01b03831682526001602052604082205467ffffffffffffffff600160801b909204821691161080159061081257506000546107ec906206978090600160801b900467ffffffffffffffff166108af565b6001600160a01b03831660009081526001602052604090205467ffffffffffffffff1611155b92915050565b6040516323b872dd600052836020528260405281606052602060006064601c6000895af13d15600160005114171661085857637939f4246000526004601cfd5b600060605260405250505050565b60006020828403121561087857600080fd5b5035919050565b60006020828403121561089157600080fd5b81356001600160a01b03811681146108a857600080fd5b9392505050565b8082018082111561081257634e487b7160e01b600052601160045260246000fd5b6000602082840312156108e257600080fd5b505191905056fea26469706673582212202cec8a0d39fb126754c19164a61d8c89c261eefb4a8299adaa1c0664f7e1864b64736f6c63430008130033",
    "sourceMap": "359:3242:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3442:157;;;:::i;:::-;;;179:14:95;;172:22;154:41;;142:2;127:18;3442:157:26;;;;;;;;992:43;;;;;-1:-1:-1;;;992:43:26;;;;;;;;;380:18:95;368:31;;;350:50;;338:2;323:18;992:43:26;206:200:95;2028:174:26;;;;;;:::i;:::-;;:::i;:::-;;1098:54;;;;;;:::i;:::-;;;;;;;;;;;;;;;;659:39;;;;;;;;-1:-1:-1;;;;;1051:32:95;;;1033:51;;1021:2;1006:18;659:39:26;887:203:95;1041:25:26;;;;;-1:-1:-1;;;1041:25:26;;;;;;2208:685;;;:::i;:::-;;;1241:25:95;;;1229:2;1214:18;2208:685:26;1095:177:95;947:39:26;;;;;-1:-1:-1;;;;;947:39:26;;;;;;-1:-1:-1;;;;;1441:47:95;;;1423:66;;1411:2;1396:18;947:39:26;1277:218:95;1661:361:26;;;;;;:::i;:::-;;:::i;563:43::-;;597:9;563:43;;804:48;;;;;900:40;;;;;3442:157;3492:4;3534:29;;:58;;546:6;;-1:-1:-1;;;3534:29:26;;;;:58;:::i;:::-;3515:15;:77;;3508:84;;3442:157;:::o;2028:174::-;2081:40;;-1:-1:-1;;;2081:40:26;;2102:10;2081:40;;;2361:51:95;2428:18;;;2421:34;;;2081:15:26;-1:-1:-1;;;;;2081:20:26;;;;2334:18:95;;2081:40:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:64;2160:14;2176:10;2188:6;2131:28;:64::i;:::-;2028:174;:::o;2208:685::-;2253:15;2284:19;:17;:19::i;:::-;2280:67;;;2319:17;:15;:17::i;:::-;2357:21;2411:24;;2381:55;;-1:-1:-1;;;2381:55:26;;-1:-1:-1;;;;;2411:24:26;;;2381:55;;;1423:66:95;2381:15:26;-1:-1:-1;;;;;2381:29:26;;;;1396:18:95;;2381:55:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2446:23;2512:24;;2472:65;;-1:-1:-1;;;2472:65:26;;2500:10;2472:65;;;3052:51:95;-1:-1:-1;;;;;2512:24:26;;;3119:18:95;;;3112:75;2357:79:26;;-1:-1:-1;2446:23:26;2472:15;-1:-1:-1;;;;;2472:27:26;;;;3025:18:95;;2472:65:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2446:91;;2570:1;2552:15;:19;:40;;;;;2591:1;2575:13;:17;2552:40;2548:339;;;2618:46;:15;597:9;2650:13;2618:22;:46::i;:::-;2608:56;;2692:1;2682:7;:11;:47;;;;;2698:31;2718:10;2698:19;:31::i;:::-;2697:32;2682:47;2678:199;;;2749:37;;-1:-1:-1;;;2749:37:26;;2766:10;2749:37;;;2361:51:95;2428:18;;;2421:34;;;2749:11:26;-1:-1:-1;;;;;2749:16:26;;;;2334:18:95;;2749:37:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2825:10:26;2804:32;;;;:20;:32;;;;;:58;;-1:-1:-1;;2804:58:26;2846:15;2804:58;;;;;-1:-1:-1;;2678:199:26;2270:623;;2208:685;:::o;1661:361::-;1717:6;1727:1;1717:11;1713:71;;1751:22;;-1:-1:-1;;;1751:22:26;;;;;;;;;;;1713:71;1794:40;;-1:-1:-1;;;1794:40:26;;1815:10;1794:40;;;2361:51:95;2428:18;;;2421:34;;;1794:15:26;-1:-1:-1;;;;;1794:20:26;;;;2334:18:95;;1794:40:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:19;:17;:19::i;:::-;;1874:141;1920:14;1948:10;1980:4;1999:6;1874:32;:141::i;9056:1506:88:-;9312:4;9306:11;9441:10;9435:4;9428:24;9478:2;9472:4;9465:16;9536:6;9530:4;9523:20;10235:4;10229;10223;10217;10214:1;10207:5;10200;10195:45;9859:16;9852:24;9848:1;9841:4;9835:11;9832:18;9829:48;9617:641;9590:891;;10374:10;10368:4;10361:24;10462:4;10456;10449:18;9590:891;10502:4;10495:24;-1:-1:-1;;;9056:1506:88:o;2899:236:26:-;2979:15;-1:-1:-1;;;;;2979:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2944:24;:62;;-1:-1:-1;;;3016:55:26;3055:15;3016:55;;-1:-1:-1;;;3016:55:26;-1:-1:-1;;;;;;3016:55:26;;;-1:-1:-1;;;;;2944:62:26;;;;3016:55;;;;;;;;3105:13;;;;;2944:62;3105:13;;;;;-1:-1:-1;;;;;3105:13:26;;;;;;;;;2899:236::o;18248:600:86:-;18330:9;18573:1;18569;18565:6;18561:14;18558:1;18555:21;18552:1;18548:29;18541:37;18528:11;18524:55;18514:273;;18680:10;18674:4;18667:24;18768:4;18762;18755:18;18514:273;-1:-1:-1;18809:9:86;;18805:27;;18248:600::o;3141:295:26:-;3209:4;3279:29;;-1:-1:-1;;;;;3246:29:26;;;;:20;:29;;;;;;3279;-1:-1:-1;;;3279:29:26;;;;;3246;;:62;;;;:173;;-1:-1:-1;3361:29:26;;:58;;546:6;;-1:-1:-1;;;3361:29:26;;;;:58;:::i;:::-;-1:-1:-1;;;;;3328:29:26;;;;;;:20;:29;;;;;;;;:91;;3246:173;3225:204;3141:295;-1:-1:-1;;3141:295:26:o;7288:1652:88:-;7562:4;7556:11;7691:10;7685:4;7678:24;7728:4;7722;7715:18;7790:2;7784:4;7777:16;7848:6;7842:4;7835:20;8547:4;8541;8535;8529;8526:1;8519:5;8512;8507:45;8171:16;8164:24;8160:1;8153:4;8147:11;8144:18;8141:48;7929:641;7902:895;;8690:10;8684:4;8677:24;8778:4;8772;8765:18;7902:895;8824:1;8818:4;8811:15;8880:4;8873:24;-1:-1:-1;;;;7288:1652:88:o;411:180:95:-;470:6;523:2;511:9;502:7;498:23;494:32;491:52;;;539:1;536;529:12;491:52;-1:-1:-1;562:23:95;;411:180;-1:-1:-1;411:180:95:o;596:286::-;655:6;708:2;696:9;687:7;683:23;679:32;676:52;;;724:1;721;714:12;676:52;750:23;;-1:-1:-1;;;;;802:31:95;;792:42;;782:70;;848:1;845;838:12;782:70;871:5;596:286;-1:-1:-1;;;596:286:95:o;1960:222::-;2025:9;;;2046:10;;;2043:133;;;2098:10;2093:3;2089:20;2086:1;2079:31;2133:4;2130:1;2123:15;2161:4;2158:1;2151:15;2689:184;2759:6;2812:2;2800:9;2791:7;2787:23;2783:32;2780:52;;;2828:1;2825;2818:12;2780:52;-1:-1:-1;2851:16:95;;2689:184;-1:-1:-1;2689:184:95:o",
    "linkReferences": {},
    "immutableReferences": {
      "3900": [
        {
          "start": 334,
          "length": 32
        },
        {
          "start": 773,
          "length": 32
        },
        {
          "start": 1570,
          "length": 32
        }
      ],
      "3903": [
        {
          "start": 524,
          "length": 32
        },
        {
          "start": 668,
          "length": 32
        },
        {
          "start": 872,
          "length": 32
        },
        {
          "start": 1032,
          "length": 32
        },
        {
          "start": 1456,
          "length": 32
        },
        {
          "start": 1679,
          "length": 32
        }
      ],
      "3906": [
        {
          "start": 563,
          "length": 32
        },
        {
          "start": 1247,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "REWARDS()": "c0034e0c",
    "accountingToken()": "da68cf8b",
    "deposit(uint256)": "b6b55f25",
    "distributeRewards()": "6f4a2cd0",
    "isNewRewardsRound()": "1a465d23",
    "lastRecordedSnapshotTimestamp()": "2b7f81fe",
    "lastRewardTimestamps(address)": "3b632b25",
    "lastSnapshotIdForRewards()": "7076b7cd",
    "liquidityToken()": "43cd8f7e",
    "rewardToken()": "f7c618c1",
    "roundNumber()": "4e2786fb",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidDepositAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REWARDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountingToken\",\"outputs\":[{\"internalType\":\"contract AccountingToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isNewRewardsRound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRecordedSnapshotTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRewardTimestamps\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastSnapshotIdForRewards\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract RewardToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundNumber\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\",\"kind\":\"dev\",\"methods\":{\"deposit(uint256)\":{\"params\":{\"amount\":\"amount of tokens to be deposited\"}}},\"title\":\"TheRewarderPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Deposit `amount` liquidity tokens into the pool, minting accounting tokens in exchange.         Also distributes rewards if available.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/the-rewarder/TheRewarderPool.sol\":\"TheRewarderPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"contracts/the-rewarder/AccountingToken.sol\":{\"keccak256\":\"0xf60e380b77758b29c6f8804051f5ba406faf89e6c611f2a7ec959e95a74bb5b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a05e91ea2cfa00e9d6129fb833b09d53340b14ca2a7937cd94c8e8e24e128ae7\",\"dweb:/ipfs/QmW8M6dKNwebG5dEB6KZK9xSwSAgaJV5e9yvwVFHo7E4Nj\"]},\"contracts/the-rewarder/RewardToken.sol\":{\"keccak256\":\"0xc53706307e51b6d782878866914ccc60ad72f37896f70860f9a7f3aa6b55ac99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddc0f64429b62f973d80eb51390410cfbc2c37ff59a4ab5a653de138797c2a2a\",\"dweb:/ipfs/QmTG9f5MpYtbyF9VNQVgy9xPTKrUdRrv56HURMY73UCvH4\"]},\"contracts/the-rewarder/TheRewarderPool.sol\":{\"keccak256\":\"0xd518962f211244d54b139d4bfb960ebac3aafe547304d1231055f4054d882210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://003e294410abf9bcaa49090d5f492d50e6d83a33dc72098932350153f96ccbec\",\"dweb:/ipfs/QmdKRW3yMUeFaenX2G2FYxjdGvGmBczwqNAvn91YU719zv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\":{\"keccak256\":\"0x9f3a9fc338edd87bff11d626ee6f365ac72f03a8841c4a2938438ef81e8cf1d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d2192ec88279638f4866b2c09e017702699fdb995bf1ca167b7110bc5b29d51\",\"dweb:/ipfs/Qme2JhqYoH25xKpgC7qj8o9yKofJyragCuHfX4CQMuPuef\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa7bc891be2bc5948340a8fb14ad36c8846230c9086269e37f3febf0dc239c9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a002427adcb3b71f2c2ad8212fa789997d5662b0c7be941bc5c52b26b83433cc\",\"dweb:/ipfs/QmR1EfpL9zQ3zT25kRZdjcjWBqaBhdSun5MLnJV1ZdzEn1\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"node_modules/solady/src/auth/Ownable.sol\":{\"keccak256\":\"0xc3ca716511f5671ab2cd53d0752ef1827c4811ba4be37c8ccaaee9a92549d0a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25aed2a356f5db4e1f6bb7ad0e85d8ba51d62572bacc1a154d4f26cc059da043\",\"dweb:/ipfs/QmXJqdf7a3zLuXvMCs5bquZMpWtybAiqDXyfBzdor6wR68\"]},\"node_modules/solady/src/auth/OwnableRoles.sol\":{\"keccak256\":\"0x760768feb4c6ec27c51c14847d4a72eca583393c9b28c15e340434a952a74cd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19a51dea139495ebbdeeb5390d03270e6f22d05870f6a7172e01efe194ef5fb3\",\"dweb:/ipfs/QmbaTuju9rqyjJKWFxCReVABMCEe5ht4CTqKXFXhLAhRar\"]},\"node_modules/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x3ef393cc6e1a23209dabb81a01b0f2c686fdfb945f1345e0289b8c3b8dde8c86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d362899a9dd8a8552a1830e2b3327a77e657f8f95dd0e806d700817d1476a019\",\"dweb:/ipfs/QmYz9ccm37Tt5qrZTTyLFBpseFKct5K34WbtxGEWqhxQrX\"]},\"node_modules/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xc8867a9773adc28b8f122dd1ac9b4023eeb4a4ee7241f141beeb64e5100f3022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afda3cdc5649351a561c0403ccc25e35eba4e3025a70ec69f8235f1b865c7ffb\",\"dweb:/ipfs/QmQCuMFXrvVXeeYFSzSvFB1AG94cWJuFoQGFmb48kejSdS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidDepositAmount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REWARDS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountingToken",
          "outputs": [
            {
              "internalType": "contract AccountingToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "rewards",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isNewRewardsRound",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastRecordedSnapshotTimestamp",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastRewardTimestamps",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastSnapshotIdForRewards",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "contract RewardToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "roundNumber",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(uint256)": {
            "params": {
              "amount": "amount of tokens to be deposited"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(uint256)": {
            "notice": "Deposit `amount` liquidity tokens into the pool, minting accounting tokens in exchange.         Also distributes rewards if available."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/=node_modules/@gnosis.pm/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solady/=node_modules/solady/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/the-rewarder/TheRewarderPool.sol": "TheRewarderPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/the-rewarder/AccountingToken.sol": {
        "keccak256": "0xf60e380b77758b29c6f8804051f5ba406faf89e6c611f2a7ec959e95a74bb5b3",
        "urls": [
          "bzz-raw://a05e91ea2cfa00e9d6129fb833b09d53340b14ca2a7937cd94c8e8e24e128ae7",
          "dweb:/ipfs/QmW8M6dKNwebG5dEB6KZK9xSwSAgaJV5e9yvwVFHo7E4Nj"
        ],
        "license": "MIT"
      },
      "contracts/the-rewarder/RewardToken.sol": {
        "keccak256": "0xc53706307e51b6d782878866914ccc60ad72f37896f70860f9a7f3aa6b55ac99",
        "urls": [
          "bzz-raw://ddc0f64429b62f973d80eb51390410cfbc2c37ff59a4ab5a653de138797c2a2a",
          "dweb:/ipfs/QmTG9f5MpYtbyF9VNQVgy9xPTKrUdRrv56HURMY73UCvH4"
        ],
        "license": "MIT"
      },
      "contracts/the-rewarder/TheRewarderPool.sol": {
        "keccak256": "0xd518962f211244d54b139d4bfb960ebac3aafe547304d1231055f4054d882210",
        "urls": [
          "bzz-raw://003e294410abf9bcaa49090d5f492d50e6d83a33dc72098932350153f96ccbec",
          "dweb:/ipfs/QmdKRW3yMUeFaenX2G2FYxjdGvGmBczwqNAvn91YU719zv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol": {
        "keccak256": "0x9f3a9fc338edd87bff11d626ee6f365ac72f03a8841c4a2938438ef81e8cf1d9",
        "urls": [
          "bzz-raw://8d2192ec88279638f4866b2c09e017702699fdb995bf1ca167b7110bc5b29d51",
          "dweb:/ipfs/Qme2JhqYoH25xKpgC7qj8o9yKofJyragCuHfX4CQMuPuef"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Arrays.sol": {
        "keccak256": "0xa7bc891be2bc5948340a8fb14ad36c8846230c9086269e37f3febf0dc239c9f7",
        "urls": [
          "bzz-raw://a002427adcb3b71f2c2ad8212fa789997d5662b0c7be941bc5c52b26b83433cc",
          "dweb:/ipfs/QmR1EfpL9zQ3zT25kRZdjcjWBqaBhdSun5MLnJV1ZdzEn1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/auth/Ownable.sol": {
        "keccak256": "0xc3ca716511f5671ab2cd53d0752ef1827c4811ba4be37c8ccaaee9a92549d0a6",
        "urls": [
          "bzz-raw://25aed2a356f5db4e1f6bb7ad0e85d8ba51d62572bacc1a154d4f26cc059da043",
          "dweb:/ipfs/QmXJqdf7a3zLuXvMCs5bquZMpWtybAiqDXyfBzdor6wR68"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/auth/OwnableRoles.sol": {
        "keccak256": "0x760768feb4c6ec27c51c14847d4a72eca583393c9b28c15e340434a952a74cd2",
        "urls": [
          "bzz-raw://19a51dea139495ebbdeeb5390d03270e6f22d05870f6a7172e01efe194ef5fb3",
          "dweb:/ipfs/QmbaTuju9rqyjJKWFxCReVABMCEe5ht4CTqKXFXhLAhRar"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x3ef393cc6e1a23209dabb81a01b0f2c686fdfb945f1345e0289b8c3b8dde8c86",
        "urls": [
          "bzz-raw://d362899a9dd8a8552a1830e2b3327a77e657f8f95dd0e806d700817d1476a019",
          "dweb:/ipfs/QmYz9ccm37Tt5qrZTTyLFBpseFKct5K34WbtxGEWqhxQrX"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xc8867a9773adc28b8f122dd1ac9b4023eeb4a4ee7241f141beeb64e5100f3022",
        "urls": [
          "bzz-raw://afda3cdc5649351a561c0403ccc25e35eba4e3025a70ec69f8235f1b865c7ffb",
          "dweb:/ipfs/QmQCuMFXrvVXeeYFSzSvFB1AG94cWJuFoQGFmb48kejSdS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/the-rewarder/TheRewarderPool.sol",
    "id": 4146,
    "exportedSymbols": {
      "AccountingToken": [
        3729
      ],
      "FixedPointMathLib": [
        15419
      ],
      "RewardToken": [
        3880
      ],
      "SafeTransferLib": [
        16147
      ],
      "TheRewarderPool": [
        4145
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3570:26",
    "nodes": [
      {
        "id": 3882,
        "nodeType": "PragmaDirective",
        "src": "32:23:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3883,
        "nodeType": "ImportDirective",
        "src": "57:48:26",
        "nodes": [],
        "absolutePath": "node_modules/solady/src/utils/FixedPointMathLib.sol",
        "file": "solady/src/utils/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4146,
        "sourceUnit": 15420,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3884,
        "nodeType": "ImportDirective",
        "src": "106:46:26",
        "nodes": [],
        "absolutePath": "node_modules/solady/src/utils/SafeTransferLib.sol",
        "file": "solady/src/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4146,
        "sourceUnit": 16148,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3886,
        "nodeType": "ImportDirective",
        "src": "153:48:26",
        "nodes": [],
        "absolutePath": "contracts/the-rewarder/RewardToken.sol",
        "file": "./RewardToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4146,
        "sourceUnit": 3881,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3885,
              "name": "RewardToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3880,
              "src": "162:11:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3888,
        "nodeType": "ImportDirective",
        "src": "202:56:26",
        "nodes": [],
        "absolutePath": "contracts/the-rewarder/AccountingToken.sol",
        "file": "./AccountingToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4146,
        "sourceUnit": 3730,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3887,
              "name": "AccountingToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3729,
              "src": "211:15:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4145,
        "nodeType": "ContractDefinition",
        "src": "359:3242:26",
        "nodes": [
          {
            "id": 3892,
            "nodeType": "UsingForDirective",
            "src": "390:36:26",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3890,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "396:17:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15419,
              "src": "396:17:26"
            },
            "typeName": {
              "id": 3891,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "418:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3895,
            "nodeType": "VariableDeclaration",
            "src": "492:60:26",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "REWARDS_ROUND_MIN_DURATION",
            "nameLocation": "517:26:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3893,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "492:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 3894,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "546:6:26",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_432000_by_1",
                "typeString": "int_const 432000"
              },
              "value": "5"
            },
            "visibility": "private"
          },
          {
            "id": 3898,
            "nodeType": "VariableDeclaration",
            "src": "563:43:26",
            "nodes": [],
            "constant": true,
            "functionSelector": "c0034e0c",
            "mutability": "constant",
            "name": "REWARDS",
            "nameLocation": "587:7:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3896,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "563:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 3897,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "597:9:26",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "id": 3900,
            "nodeType": "VariableDeclaration",
            "src": "659:39:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "43cd8f7e",
            "mutability": "immutable",
            "name": "liquidityToken",
            "nameLocation": "684:14:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3899,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "659:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3903,
            "nodeType": "VariableDeclaration",
            "src": "804:48:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "da68cf8b",
            "mutability": "immutable",
            "name": "accountingToken",
            "nameLocation": "837:15:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AccountingToken_$3729",
              "typeString": "contract AccountingToken"
            },
            "typeName": {
              "id": 3902,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3901,
                "name": "AccountingToken",
                "nameLocations": [
                  "804:15:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3729,
                "src": "804:15:26"
              },
              "referencedDeclaration": 3729,
              "src": "804:15:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccountingToken_$3729",
                "typeString": "contract AccountingToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3906,
            "nodeType": "VariableDeclaration",
            "src": "900:40:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "f7c618c1",
            "mutability": "immutable",
            "name": "rewardToken",
            "nameLocation": "929:11:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RewardToken_$3880",
              "typeString": "contract RewardToken"
            },
            "typeName": {
              "id": 3905,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3904,
                "name": "RewardToken",
                "nameLocations": [
                  "900:11:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3880,
                "src": "900:11:26"
              },
              "referencedDeclaration": 3880,
              "src": "900:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RewardToken_$3880",
                "typeString": "contract RewardToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3908,
            "nodeType": "VariableDeclaration",
            "src": "947:39:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "7076b7cd",
            "mutability": "mutable",
            "name": "lastSnapshotIdForRewards",
            "nameLocation": "962:24:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 3907,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "947:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3910,
            "nodeType": "VariableDeclaration",
            "src": "992:43:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "2b7f81fe",
            "mutability": "mutable",
            "name": "lastRecordedSnapshotTimestamp",
            "nameLocation": "1006:29:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 3909,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3912,
            "nodeType": "VariableDeclaration",
            "src": "1041:25:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "4e2786fb",
            "mutability": "mutable",
            "name": "roundNumber",
            "nameLocation": "1055:11:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 3911,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1041:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3916,
            "nodeType": "VariableDeclaration",
            "src": "1098:54:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "3b632b25",
            "mutability": "mutable",
            "name": "lastRewardTimestamps",
            "nameLocation": "1132:20:26",
            "scope": 4145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
              "typeString": "mapping(address => uint64)"
            },
            "typeName": {
              "id": 3915,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3913,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1106:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1098:26:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                "typeString": "mapping(address => uint64)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3914,
                "name": "uint64",
                "nodeType": "ElementaryTypeName",
                "src": "1117:6:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 3918,
            "nodeType": "ErrorDefinition",
            "src": "1159:29:26",
            "nodes": [],
            "errorSelector": "fe9ba5cd",
            "name": "InvalidDepositAmount",
            "nameLocation": "1165:20:26",
            "parameters": {
              "id": 3917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:2:26"
            }
          },
          {
            "id": 3945,
            "nodeType": "FunctionDefinition",
            "src": "1194:234:26",
            "nodes": [],
            "body": {
              "id": 3944,
              "nodeType": "Block",
              "src": "1222:206:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3923,
                      "name": "liquidityToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3900,
                      "src": "1280:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3924,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3920,
                      "src": "1297:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1280:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3926,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:23:26"
                },
                {
                  "expression": {
                    "id": 3932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3927,
                      "name": "accountingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3903,
                      "src": "1313:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AccountingToken_$3729",
                        "typeString": "contract AccountingToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1331:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AccountingToken_$3729_$",
                          "typeString": "function () returns (contract AccountingToken)"
                        },
                        "typeName": {
                          "id": 3929,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3928,
                            "name": "AccountingToken",
                            "nameLocations": [
                              "1335:15:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3729,
                            "src": "1335:15:26"
                          },
                          "referencedDeclaration": 3729,
                          "src": "1335:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AccountingToken_$3729",
                            "typeString": "contract AccountingToken"
                          }
                        }
                      },
                      "id": 3931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1331:21:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AccountingToken_$3729",
                        "typeString": "contract AccountingToken"
                      }
                    },
                    "src": "1313:39:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AccountingToken_$3729",
                      "typeString": "contract AccountingToken"
                    }
                  },
                  "id": 3933,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:39:26"
                },
                {
                  "expression": {
                    "id": 3939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3934,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3906,
                      "src": "1362:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RewardToken_$3880",
                        "typeString": "contract RewardToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1376:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RewardToken_$3880_$",
                          "typeString": "function () returns (contract RewardToken)"
                        },
                        "typeName": {
                          "id": 3936,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3935,
                            "name": "RewardToken",
                            "nameLocations": [
                              "1380:11:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3880,
                            "src": "1380:11:26"
                          },
                          "referencedDeclaration": 3880,
                          "src": "1380:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RewardToken_$3880",
                            "typeString": "contract RewardToken"
                          }
                        }
                      },
                      "id": 3938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1376:17:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RewardToken_$3880",
                        "typeString": "contract RewardToken"
                      }
                    },
                    "src": "1362:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RewardToken_$3880",
                      "typeString": "contract RewardToken"
                    }
                  },
                  "id": 3940,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:31:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3941,
                      "name": "_recordSnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4108,
                      "src": "1404:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:17:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3943,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:17:26"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3920,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1214:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3945,
                  "src": "1206:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:16:26"
            },
            "returnParameters": {
              "id": 3922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1222:0:26"
            },
            "scope": 4145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3984,
            "nodeType": "FunctionDefinition",
            "src": "1661:361:26",
            "nodes": [],
            "body": {
              "id": 3983,
              "nodeType": "Block",
              "src": "1703:319:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3951,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3948,
                      "src": "1717:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1727:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1717:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3958,
                  "nodeType": "IfStatement",
                  "src": "1713:71:26",
                  "trueBody": {
                    "id": 3957,
                    "nodeType": "Block",
                    "src": "1730:54:26",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3954,
                            "name": "InvalidDepositAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3918,
                            "src": "1751:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1751:22:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3956,
                        "nodeType": "RevertStatement",
                        "src": "1744:29:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3962,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1815:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1819:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1815:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3964,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3948,
                        "src": "1827:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3959,
                        "name": "accountingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3903,
                        "src": "1794:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AccountingToken_$3729",
                          "typeString": "contract AccountingToken"
                        }
                      },
                      "id": 3961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1810:4:26",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3672,
                      "src": "1794:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:40:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3966,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:40:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3967,
                      "name": "distributeRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4083,
                      "src": "1844:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 3968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:19:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3969,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:19:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3973,
                        "name": "liquidityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3900,
                        "src": "1920:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3974,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1948:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1952:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1948:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3978,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1980:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TheRewarderPool_$4145",
                              "typeString": "contract TheRewarderPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TheRewarderPool_$4145",
                              "typeString": "contract TheRewarderPool"
                            }
                          ],
                          "id": 3977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1972:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3976,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1972:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1972:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3980,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3948,
                        "src": "1999:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3970,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16147,
                        "src": "1874:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$16147_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 3972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1890:16:26",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16122,
                      "src": "1874:32:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 3981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:141:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3982,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:141:26"
                }
              ]
            },
            "documentation": {
              "id": 3946,
              "nodeType": "StructuredDocumentation",
              "src": "1434:222:26",
              "text": " @notice Deposit `amount` liquidity tokens into the pool, minting accounting tokens in exchange.\n         Also distributes rewards if available.\n @param amount amount of tokens to be deposited"
            },
            "functionSelector": "b6b55f25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1670:7:26",
            "parameters": {
              "id": 3949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3948,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1686:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3984,
                  "src": "1678:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:16:26"
            },
            "returnParameters": {
              "id": 3950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1703:0:26"
            },
            "scope": 4145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4007,
            "nodeType": "FunctionDefinition",
            "src": "2028:174:26",
            "nodes": [],
            "body": {
              "id": 4006,
              "nodeType": "Block",
              "src": "2071:131:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3992,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2102:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2106:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2102:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3994,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3986,
                        "src": "2114:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3989,
                        "name": "accountingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3903,
                        "src": "2081:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AccountingToken_$3729",
                          "typeString": "contract AccountingToken"
                        }
                      },
                      "id": 3991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2097:4:26",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3688,
                      "src": "2081:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:40:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3996,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:40:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4000,
                        "name": "liquidityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3900,
                        "src": "2160:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4001,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2176:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2180:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2176:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4003,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3986,
                        "src": "2188:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3997,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16147,
                        "src": "2131:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$16147_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 3999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2147:12:26",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16134,
                      "src": "2131:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2131:64:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4005,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:64:26"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2037:8:26",
            "parameters": {
              "id": 3987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3986,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2054:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "2046:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2045:16:26"
            },
            "returnParameters": {
              "id": 3988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2071:0:26"
            },
            "scope": 4145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4083,
            "nodeType": "FunctionDefinition",
            "src": "2208:685:26",
            "nodes": [],
            "body": {
              "id": 4082,
              "nodeType": "Block",
              "src": "2270:623:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4012,
                      "name": "isNewRewardsRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4144,
                      "src": "2284:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 4013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2284:19:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4018,
                  "nodeType": "IfStatement",
                  "src": "2280:67:26",
                  "trueBody": {
                    "id": 4017,
                    "nodeType": "Block",
                    "src": "2305:42:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4014,
                            "name": "_recordSnapshot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4108,
                            "src": "2319:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2319:17:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4016,
                        "nodeType": "ExpressionStatement",
                        "src": "2319:17:26"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4020,
                      "mutability": "mutable",
                      "name": "totalDeposits",
                      "nameLocation": "2365:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 4082,
                      "src": "2357:21:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4019,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2357:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4025,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4023,
                        "name": "lastSnapshotIdForRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3908,
                        "src": "2411:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 4021,
                        "name": "accountingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3903,
                        "src": "2381:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AccountingToken_$3729",
                          "typeString": "contract AccountingToken"
                        }
                      },
                      "id": 4022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2397:13:26",
                      "memberName": "totalSupplyAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9868,
                      "src": "2381:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2381:55:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2357:79:26"
                },
                {
                  "assignments": [
                    4027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4027,
                      "mutability": "mutable",
                      "name": "amountDeposited",
                      "nameLocation": "2454:15:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 4082,
                      "src": "2446:23:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2446:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4034,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4030,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2500:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2504:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2500:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4032,
                        "name": "lastSnapshotIdForRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3908,
                        "src": "2512:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 4028,
                        "name": "accountingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3903,
                        "src": "2472:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AccountingToken_$3729",
                          "typeString": "contract AccountingToken"
                        }
                      },
                      "id": 4029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2488:11:26",
                      "memberName": "balanceOfAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9844,
                      "src": "2472:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2472:65:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2446:91:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4035,
                        "name": "amountDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "2552:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2570:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2552:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4038,
                        "name": "totalDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4020,
                        "src": "2575:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2591:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2575:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2552:40:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4081,
                  "nodeType": "IfStatement",
                  "src": "2548:339:26",
                  "trueBody": {
                    "id": 4080,
                    "nodeType": "Block",
                    "src": "2594:293:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 4048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4042,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4010,
                            "src": "2608:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4045,
                                "name": "REWARDS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3898,
                                "src": "2641:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4046,
                                "name": "totalDeposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4020,
                                "src": "2650:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 4043,
                                "name": "amountDeposited",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4027,
                                "src": "2618:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2634:6:26",
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15239,
                              "src": "2618:22:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2618:46:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2608:56:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4049,
                        "nodeType": "ExpressionStatement",
                        "src": "2608:56:26"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4050,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4010,
                              "src": "2682:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 4051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2692:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2682:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 4057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2697:32:26",
                            "subExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 4054,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2718:3:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 4055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2722:6:26",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2718:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4053,
                                "name": "_hasRetrievedReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4131,
                                "src": "2698:19:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 4056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2698:31:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2682:47:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4079,
                        "nodeType": "IfStatement",
                        "src": "2678:199:26",
                        "trueBody": {
                          "id": 4078,
                          "nodeType": "Block",
                          "src": "2731:146:26",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 4062,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2766:3:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4063,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2770:6:26",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2766:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4064,
                                    "name": "rewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4010,
                                    "src": "2778:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4059,
                                    "name": "rewardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3906,
                                    "src": "2749:11:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RewardToken_$3880",
                                      "typeString": "contract RewardToken"
                                    }
                                  },
                                  "id": 4061,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2761:4:26",
                                  "memberName": "mint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3879,
                                  "src": "2749:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 4065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2749:37:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4066,
                              "nodeType": "ExpressionStatement",
                              "src": "2749:37:26"
                            },
                            {
                              "expression": {
                                "id": 4076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4067,
                                    "name": "lastRewardTimestamps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3916,
                                    "src": "2804:20:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                                      "typeString": "mapping(address => uint64)"
                                    }
                                  },
                                  "id": 4070,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 4068,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2825:3:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4069,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2829:6:26",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2825:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2804:32:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 4073,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "2846:5:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 4074,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2852:9:26",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "2846:15:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 4072,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2839:6:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint64_$",
                                      "typeString": "type(uint64)"
                                    },
                                    "typeName": {
                                      "id": 4071,
                                      "name": "uint64",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2839:6:26",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 4075,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2839:23:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "2804:58:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 4077,
                              "nodeType": "ExpressionStatement",
                              "src": "2804:58:26"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6f4a2cd0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeRewards",
            "nameLocation": "2217:17:26",
            "parameters": {
              "id": 4008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2234:2:26"
            },
            "returnParameters": {
              "id": 4011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4010,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "2261:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "2253:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2252:17:26"
            },
            "scope": 4145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4108,
            "nodeType": "FunctionDefinition",
            "src": "2899:236:26",
            "nodes": [],
            "body": {
              "id": 4107,
              "nodeType": "Block",
              "src": "2934:201:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4086,
                      "name": "lastSnapshotIdForRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3908,
                      "src": "2944:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4089,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3903,
                              "src": "2979:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AccountingToken_$3729",
                                "typeString": "contract AccountingToken"
                              }
                            },
                            "id": 4090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2995:8:26",
                            "memberName": "snapshot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3700,
                            "src": "2979:24:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 4091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2979:26:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2971:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 4087,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2971:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2971:35:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2944:62:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 4094,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:62:26"
                },
                {
                  "expression": {
                    "id": 4101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4095,
                      "name": "lastRecordedSnapshotTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3910,
                      "src": "3016:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 4098,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3055:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3061:9:26",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3055:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3048:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 4096,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3048:6:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3048:23:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3016:55:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 4102,
                  "nodeType": "ExpressionStatement",
                  "src": "3016:55:26"
                },
                {
                  "id": 4106,
                  "nodeType": "UncheckedBlock",
                  "src": "3081:48:26",
                  "statements": [
                    {
                      "expression": {
                        "id": 4104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "3105:13:26",
                        "subExpression": {
                          "id": 4103,
                          "name": "roundNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3912,
                          "src": "3107:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 4105,
                      "nodeType": "ExpressionStatement",
                      "src": "3105:13:26"
                    }
                  ]
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_recordSnapshot",
            "nameLocation": "2908:15:26",
            "parameters": {
              "id": 4084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2923:2:26"
            },
            "returnParameters": {
              "id": 4085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2934:0:26"
            },
            "scope": 4145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 4131,
            "nodeType": "FunctionDefinition",
            "src": "3141:295:26",
            "nodes": [],
            "body": {
              "id": 4130,
              "nodeType": "Block",
              "src": "3215:221:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 4119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 4115,
                              "name": "lastRewardTimestamps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3916,
                              "src": "3246:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                                "typeString": "mapping(address => uint64)"
                              }
                            },
                            "id": 4117,
                            "indexExpression": {
                              "id": 4116,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4110,
                              "src": "3267:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3246:29:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 4118,
                            "name": "lastRecordedSnapshotTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3910,
                            "src": "3279:29:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3246:62:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 4120,
                              "name": "lastRewardTimestamps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3916,
                              "src": "3328:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                                "typeString": "mapping(address => uint64)"
                              }
                            },
                            "id": 4122,
                            "indexExpression": {
                              "id": 4121,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4110,
                              "src": "3349:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3328:29:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4123,
                              "name": "lastRecordedSnapshotTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3910,
                              "src": "3361:29:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 4124,
                              "name": "REWARDS_ROUND_MIN_DURATION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3895,
                              "src": "3393:26:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3361:58:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3328:91:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3246:173:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 4128,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3232:197:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4114,
                  "id": 4129,
                  "nodeType": "Return",
                  "src": "3225:204:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRetrievedReward",
            "nameLocation": "3150:19:26",
            "parameters": {
              "id": 4111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4110,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3178:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "3170:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3170:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3169:17:26"
            },
            "returnParameters": {
              "id": 4114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4131,
                  "src": "3209:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4112,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3209:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3208:6:26"
            },
            "scope": 4145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 4144,
            "nodeType": "FunctionDefinition",
            "src": "3442:157:26",
            "nodes": [],
            "body": {
              "id": 4143,
              "nodeType": "Block",
              "src": "3498:101:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4136,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3515:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3521:9:26",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3515:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4138,
                        "name": "lastRecordedSnapshotTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3910,
                        "src": "3534:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 4139,
                        "name": "REWARDS_ROUND_MIN_DURATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "3566:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3534:58:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3515:77:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4135,
                  "id": 4142,
                  "nodeType": "Return",
                  "src": "3508:84:26"
                }
              ]
            },
            "functionSelector": "1a465d23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNewRewardsRound",
            "nameLocation": "3451:17:26",
            "parameters": {
              "id": 4132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3468:2:26"
            },
            "returnParameters": {
              "id": 4135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4144,
                  "src": "3492:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4133,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3491:6:26"
            },
            "scope": 4145,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TheRewarderPool",
        "contractDependencies": [
          3729,
          3880
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3889,
          "nodeType": "StructuredDocumentation",
          "src": "260:98:26",
          "text": " @title TheRewarderPool\n @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4145
        ],
        "name": "TheRewarderPool",
        "nameLocation": "368:15:26",
        "scope": 4146,
        "usedErrors": [
          3918
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 26
}