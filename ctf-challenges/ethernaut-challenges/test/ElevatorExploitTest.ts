import { ethers } from "hardhat";
import { Elevator as ElevatorTargetContract, ElevatorExploit as ElevatorAttackContract } from "../gen/types"
import { expect } from "chai";

describe("Elevator Exploit", async () => {
    let targetContract: ElevatorTargetContract;
    let attackContract: ElevatorAttackContract;

    beforeEach("Setup Target Contract", async () => {
        let targetContractFactory = await ethers.getContractFactory("Elevator");
        let attackContractFactory = await ethers.getContractFactory("ElevatorExploit");

        targetContract = await targetContractFactory.deploy();
        attackContract = await attackContractFactory.deploy(targetContract.address);
    })

    it("should make it to the top level", async () => {
       // Attack
       await attackContract.attack();

       const isAtTop = await targetContract.top();
       expect(isAtTop).to.be.true;
    })
})